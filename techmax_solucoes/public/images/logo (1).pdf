%PDF-1.7

1 0 obj
  << /Length 2 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.266667 exch 0.184314 exch 0.086275 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 4.944723 mul 0.266667 add exch dup 0.000000 sub 3.903728 mul 0.184314 add exch dup 0.000000 sub 2.602486 mul 0.086275 add exch } if dup 0.015069 gt { exch pop exch pop exch pop dup 0.015069 sub 4.248203 mul 0.341176 add exch dup 0.015069 sub 3.498520 mul 0.243137 add exch dup 0.015069 sub 2.249048 mul 0.125490 add exch } if dup 0.046454 gt { exch pop exch pop exch pop dup 0.046454 sub 3.262737 mul 0.474510 add exch dup 0.046454 sub 2.563578 mul 0.352941 add exch dup 0.046454 sub 1.747895 mul 0.196078 add exch } if dup 0.080108 gt { exch pop exch pop exch pop dup 0.080108 sub 2.390425 mul 0.584314 add exch dup 0.080108 sub 1.955804 mul 0.439216 add exch dup 0.080108 sub 1.195213 mul 0.254902 add exch } if dup 0.116200 gt { exch pop exch pop exch pop dup 0.116200 sub 1.477978 mul 0.670588 add exch dup 0.116200 sub 1.182382 mul 0.509804 add exch dup 0.116200 sub 0.788255 mul 0.298039 add exch } if dup 0.156000 gt { exch pop exch pop exch pop dup 0.156000 sub 0.763942 mul 0.729412 add exch dup 0.156000 sub 0.594177 mul 0.556863 add exch dup 0.156000 sub 0.424412 mul 0.329412 add exch } if dup 0.202200 gt { exch pop exch pop exch pop dup 0.202200 sub 0.173265 mul 0.764706 add exch dup 0.202200 sub 0.173265 mul 0.584314 add exch dup 0.202200 sub 0.115510 mul 0.349020 add exch } if dup 0.270100 gt { exch pop exch pop exch pop dup 0.270100 sub 0.509294 mul 0.776471 add exch dup 0.270100 sub 1.018589 mul 0.596078 add exch dup 0.270100 sub 0.636618 mul 0.356863 add exch } if dup 0.300900 gt { exch pop exch pop exch pop dup 0.300900 sub 1.066536 mul 0.792157 add exch dup 0.300900 sub 1.804907 mul 0.627451 add exch dup 0.300900 sub 1.230618 mul 0.376471 add exch } if dup 0.348700 gt { exch pop exch pop exch pop dup 0.348700 sub 1.338419 mul 0.843137 add exch dup 0.348700 sub 2.342233 mul 0.713726 add exch dup 0.348700 sub 1.606103 mul 0.435294 add exch } if dup 0.407300 gt { exch pop exch pop exch pop dup 0.407300 sub 1.535554 mul 0.921569 add exch dup 0.407300 sub 2.834869 mul 0.850980 add exch dup 0.407300 sub 1.889913 mul 0.529412 add exch } if dup 0.440500 gt { exch pop exch pop exch pop dup 0.440500 sub -1.097276 mul 0.972549 add exch dup 0.440500 sub -2.027575 mul 0.945098 add exch dup 0.440500 sub -1.502791 mul 0.592157 add exch } if dup 0.604900 gt { exch pop exch pop exch pop dup 0.604900 sub -2.461238 mul 0.792157 add exch dup 0.604900 sub -1.968991 mul 0.611765 add exch dup 0.604900 sub -1.148578 mul 0.345098 add exch } if dup 0.628800 gt { exch pop exch pop exch pop dup 0.628800 sub -2.213788 mul 0.733333 add exch dup 0.628800 sub -1.844824 mul 0.564706 add exch dup 0.628800 sub -1.106894 mul 0.317647 add exch } if dup 0.703200 gt { exch pop exch pop exch pop dup 0.703200 sub -1.789927 mul 0.568627 add exch dup 0.703200 sub -1.464486 mul 0.427451 add exch dup 0.703200 sub -0.922084 mul 0.235294 add exch } if dup 0.775500 gt { exch pop exch pop exch pop dup 0.775500 sub -1.367990 mul 0.439216 add exch dup 0.775500 sub -1.082992 mul 0.321569 add exch dup 0.775500 sub -0.626995 mul 0.168627 add exch } if dup 0.844300 gt { exch pop exch pop exch pop dup 0.844300 sub -0.921998 mul 0.345098 add exch dup 0.844300 sub -0.737599 mul 0.247059 add exch dup 0.844300 sub -0.430266 mul 0.125490 add exch } if dup 0.908100 gt { exch pop exch pop exch pop dup 0.908100 sub -0.363782 mul 0.286275 add exch dup 0.908100 sub -0.291025 mul 0.200000 add exch dup 0.908100 sub -0.218269 mul 0.098039 add exch } if dup 0.962000 gt { exch pop exch pop exch pop 0.266667 exch 0.184314 exch 0.086275 exch } if pop }
endstream
endobj

2 0 obj
  3655
endobj

3 0 obj
  << /Length 4 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.266667 exch 0.184314 exch 0.086275 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 3.828016 mul 0.266667 add exch dup 0.000000 sub 3.022118 mul 0.184314 add exch dup 0.000000 sub 2.014745 mul 0.086275 add exch } if dup 0.019464 gt { exch pop exch pop exch pop dup 0.019464 sub 3.288795 mul 0.341176 add exch dup 0.019464 sub 2.708420 mul 0.243137 add exch dup 0.019464 sub 1.741127 mul 0.125490 add exch } if dup 0.060006 gt { exch pop exch pop exch pop dup 0.060006 sub 2.524579 mul 0.474510 add exch dup 0.060006 sub 1.983597 mul 0.352941 add exch dup 0.060006 sub 1.352453 mul 0.196078 add exch } if dup 0.103500 gt { exch pop exch pop exch pop dup 0.103500 sub 1.851385 mul 0.584314 add exch dup 0.103500 sub 1.514770 mul 0.439216 add exch dup 0.103500 sub 0.925692 mul 0.254902 add exch } if dup 0.150100 gt { exch pop exch pop exch pop dup 0.150100 sub 1.144426 mul 0.670588 add exch dup 0.150100 sub 0.915541 mul 0.509804 add exch dup 0.150100 sub 0.610361 mul 0.298039 add exch } if dup 0.201500 gt { exch pop exch pop exch pop dup 0.201500 sub 0.591191 mul 0.729412 add exch dup 0.201500 sub 0.459815 mul 0.556863 add exch dup 0.201500 sub 0.328440 mul 0.329412 add exch } if dup 0.261200 gt { exch pop exch pop exch pop dup 0.261200 sub 0.134300 mul 0.764706 add exch dup 0.261200 sub 0.134300 mul 0.584314 add exch dup 0.261200 sub 0.089534 mul 0.349020 add exch } if dup 0.348800 gt { exch pop exch pop exch pop dup 0.348800 sub 0.260137 mul 0.776471 add exch dup 0.348800 sub 0.520274 mul 0.596078 add exch dup 0.348800 sub 0.325172 mul 0.356863 add exch } if dup 0.409100 gt { exch pop exch pop exch pop dup 0.409100 sub 0.545245 mul 0.792157 add exch dup 0.409100 sub 0.922722 mul 0.627451 add exch dup 0.409100 sub 0.629129 mul 0.376471 add exch } if dup 0.502600 gt { exch pop exch pop exch pop dup 0.502600 sub 0.684392 mul 0.843137 add exch dup 0.502600 sub 1.197687 mul 0.713726 add exch dup 0.502600 sub 0.821271 mul 0.435294 add exch } if dup 0.617200 gt { exch pop exch pop exch pop dup 0.617200 sub 0.785522 mul 0.921569 add exch dup 0.617200 sub 1.450195 mul 0.850980 add exch dup 0.617200 sub 0.966797 mul 0.529412 add exch } if dup 0.682100 gt { exch pop exch pop exch pop dup 0.682100 sub -1.419293 mul 0.972549 add exch dup 0.682100 sub -2.622607 mul 0.945098 add exch dup 0.682100 sub -1.943815 mul 0.592157 add exch } if dup 0.809200 gt { exch pop exch pop exch pop dup 0.809200 sub -2.754141 mul 0.792157 add exch dup 0.809200 sub -2.240309 mul 0.611765 add exch dup 0.809200 sub -1.356517 mul 0.345098 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.266667 exch 0.184314 exch 0.086275 exch } if pop }
endstream
endobj

4 0 obj
  2670
endobj

5 0 obj
  << /Length 6 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.972549 exch 0.945098 exch 0.592157 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -4.901960 mul 0.972549 add exch dup 0.000000 sub -8.725490 mul 0.945098 add exch dup 0.000000 sub -5.882353 mul 0.592157 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub -5.098039 mul 0.776471 add exch dup 0.040000 sub -4.117647 mul 0.596078 add exch dup 0.040000 sub -2.705883 mul 0.356863 add exch } if dup 0.140000 gt { exch pop exch pop exch pop dup 0.140000 sub 5.154062 mul 0.266667 add exch dup 0.140000 sub 3.753502 mul 0.184314 add exch dup 0.140000 sub 2.128852 mul 0.086275 add exch } if dup 0.210000 gt { exch pop exch pop exch pop dup 0.210000 sub 4.313725 mul 0.627451 add exch dup 0.210000 sub 6.225491 mul 0.447059 add exch dup 0.210000 sub 4.460785 mul 0.235294 add exch } if dup 0.290000 gt { exch pop exch pop exch pop dup 0.290000 sub -1.288515 mul 0.972549 add exch dup 0.290000 sub -4.761903 mul 0.945098 add exch dup 0.290000 sub -3.473388 mul 0.592157 add exch } if dup 0.360000 gt { exch pop exch pop exch pop dup 0.360000 sub -3.455029 mul 0.882353 add exch dup 0.360000 sub -2.398715 mul 0.611765 add exch dup 0.360000 sub -1.474439 mul 0.349020 add exch } if dup 0.538200 gt { exch pop exch pop exch pop dup 0.538200 sub 9.996155 mul 0.266667 add exch dup 0.538200 sub 8.073818 mul 0.184314 add exch dup 0.538200 sub 5.305652 mul 0.086275 add exch } if dup 0.589200 gt { exch pop exch pop exch pop dup 0.589200 sub 3.844675 mul 0.776471 add exch dup 0.589200 sub 6.843522 mul 0.596078 add exch dup 0.589200 sub 4.613611 mul 0.356863 add exch } if dup 0.640200 gt { exch pop exch pop exch pop dup 0.640200 sub -2.895542 mul 0.972549 add exch dup 0.640200 sub -5.350457 mul 0.945098 add exch dup 0.640200 sub -3.965634 mul 0.592157 add exch } if dup 0.702500 gt { exch pop exch pop exch pop dup 0.702500 sub 3.163616 mul 0.792157 add exch dup 0.702500 sub 5.602237 mul 0.611765 add exch dup 0.702500 sub 4.218155 mul 0.345098 add exch } if dup 0.762000 gt { exch pop exch pop exch pop dup 0.762000 sub -2.998848 mul 0.980392 add exch dup 0.762000 sub -5.132644 mul 0.945098 add exch dup 0.762000 sub -3.517880 mul 0.596078 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub -6.201994 mul 0.776471 add exch dup 0.830000 sub -5.009304 mul 0.596078 add exch dup 0.830000 sub -3.291828 mul 0.356863 add exch } if dup 0.912200 gt { exch pop exch pop exch pop dup 0.912200 sub 10.598822 mul 0.266667 add exch dup 0.912200 sub 8.560588 mul 0.184314 add exch dup 0.912200 sub 5.625529 mul 0.086275 add exch } if dup 0.960300 gt { exch pop exch pop exch pop dup 0.960300 sub 5.136567 mul 0.776471 add exch dup 0.960300 sub 8.791431 mul 0.596078 add exch dup 0.960300 sub 6.025589 mul 0.356863 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.980392 exch 0.945098 exch 0.596078 exch } if pop }
endstream
endobj

6 0 obj
  2880
endobj

7 0 obj
  << /Length 8 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.266667 exch 0.184314 exch 0.086275 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 3.828016 mul 0.266667 add exch dup 0.000000 sub 3.022118 mul 0.184314 add exch dup 0.000000 sub 2.014745 mul 0.086275 add exch } if dup 0.019464 gt { exch pop exch pop exch pop dup 0.019464 sub 3.288795 mul 0.341176 add exch dup 0.019464 sub 2.708420 mul 0.243137 add exch dup 0.019464 sub 1.741127 mul 0.125490 add exch } if dup 0.060006 gt { exch pop exch pop exch pop dup 0.060006 sub 2.524579 mul 0.474510 add exch dup 0.060006 sub 1.983597 mul 0.352941 add exch dup 0.060006 sub 1.352453 mul 0.196078 add exch } if dup 0.103500 gt { exch pop exch pop exch pop dup 0.103500 sub 1.851385 mul 0.584314 add exch dup 0.103500 sub 1.514770 mul 0.439216 add exch dup 0.103500 sub 0.925692 mul 0.254902 add exch } if dup 0.150100 gt { exch pop exch pop exch pop dup 0.150100 sub 1.144426 mul 0.670588 add exch dup 0.150100 sub 0.915541 mul 0.509804 add exch dup 0.150100 sub 0.610361 mul 0.298039 add exch } if dup 0.201500 gt { exch pop exch pop exch pop dup 0.201500 sub 0.591191 mul 0.729412 add exch dup 0.201500 sub 0.459815 mul 0.556863 add exch dup 0.201500 sub 0.328440 mul 0.329412 add exch } if dup 0.261200 gt { exch pop exch pop exch pop dup 0.261200 sub 0.134300 mul 0.764706 add exch dup 0.261200 sub 0.134300 mul 0.584314 add exch dup 0.261200 sub 0.089534 mul 0.349020 add exch } if dup 0.348800 gt { exch pop exch pop exch pop dup 0.348800 sub 0.260137 mul 0.776471 add exch dup 0.348800 sub 0.520274 mul 0.596078 add exch dup 0.348800 sub 0.325172 mul 0.356863 add exch } if dup 0.409100 gt { exch pop exch pop exch pop dup 0.409100 sub 0.545245 mul 0.792157 add exch dup 0.409100 sub 0.922722 mul 0.627451 add exch dup 0.409100 sub 0.629129 mul 0.376471 add exch } if dup 0.502600 gt { exch pop exch pop exch pop dup 0.502600 sub 0.684392 mul 0.843137 add exch dup 0.502600 sub 1.197687 mul 0.713726 add exch dup 0.502600 sub 0.821271 mul 0.435294 add exch } if dup 0.617200 gt { exch pop exch pop exch pop dup 0.617200 sub 0.785522 mul 0.921569 add exch dup 0.617200 sub 1.450195 mul 0.850980 add exch dup 0.617200 sub 0.966797 mul 0.529412 add exch } if dup 0.682100 gt { exch pop exch pop exch pop dup 0.682100 sub -1.419293 mul 0.972549 add exch dup 0.682100 sub -2.622607 mul 0.945098 add exch dup 0.682100 sub -1.943815 mul 0.592157 add exch } if dup 0.809200 gt { exch pop exch pop exch pop dup 0.809200 sub -2.754141 mul 0.792157 add exch dup 0.809200 sub -2.240309 mul 0.611765 add exch dup 0.809200 sub -1.356517 mul 0.345098 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.266667 exch 0.184314 exch 0.086275 exch } if pop }
endstream
endobj

8 0 obj
  2670
endobj

9 0 obj
  << /Length 10 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.972549 exch 0.945098 exch 0.592157 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -4.901960 mul 0.972549 add exch dup 0.000000 sub -8.725490 mul 0.945098 add exch dup 0.000000 sub -5.882353 mul 0.592157 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub -5.098039 mul 0.776471 add exch dup 0.040000 sub -4.117647 mul 0.596078 add exch dup 0.040000 sub -2.705883 mul 0.356863 add exch } if dup 0.140000 gt { exch pop exch pop exch pop dup 0.140000 sub 5.154062 mul 0.266667 add exch dup 0.140000 sub 3.753502 mul 0.184314 add exch dup 0.140000 sub 2.128852 mul 0.086275 add exch } if dup 0.210000 gt { exch pop exch pop exch pop dup 0.210000 sub 4.313725 mul 0.627451 add exch dup 0.210000 sub 6.225491 mul 0.447059 add exch dup 0.210000 sub 4.460785 mul 0.235294 add exch } if dup 0.290000 gt { exch pop exch pop exch pop dup 0.290000 sub -1.288515 mul 0.972549 add exch dup 0.290000 sub -4.761903 mul 0.945098 add exch dup 0.290000 sub -3.473388 mul 0.592157 add exch } if dup 0.360000 gt { exch pop exch pop exch pop dup 0.360000 sub -3.455029 mul 0.882353 add exch dup 0.360000 sub -2.398715 mul 0.611765 add exch dup 0.360000 sub -1.474439 mul 0.349020 add exch } if dup 0.538200 gt { exch pop exch pop exch pop dup 0.538200 sub 9.996155 mul 0.266667 add exch dup 0.538200 sub 8.073818 mul 0.184314 add exch dup 0.538200 sub 5.305652 mul 0.086275 add exch } if dup 0.589200 gt { exch pop exch pop exch pop dup 0.589200 sub 3.844675 mul 0.776471 add exch dup 0.589200 sub 6.843522 mul 0.596078 add exch dup 0.589200 sub 4.613611 mul 0.356863 add exch } if dup 0.640200 gt { exch pop exch pop exch pop dup 0.640200 sub -2.895542 mul 0.972549 add exch dup 0.640200 sub -5.350457 mul 0.945098 add exch dup 0.640200 sub -3.965634 mul 0.592157 add exch } if dup 0.702500 gt { exch pop exch pop exch pop dup 0.702500 sub 3.163616 mul 0.792157 add exch dup 0.702500 sub 5.602237 mul 0.611765 add exch dup 0.702500 sub 4.218155 mul 0.345098 add exch } if dup 0.762000 gt { exch pop exch pop exch pop dup 0.762000 sub -2.998848 mul 0.980392 add exch dup 0.762000 sub -5.132644 mul 0.945098 add exch dup 0.762000 sub -3.517880 mul 0.596078 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub -6.201994 mul 0.776471 add exch dup 0.830000 sub -5.009304 mul 0.596078 add exch dup 0.830000 sub -3.291828 mul 0.356863 add exch } if dup 0.912200 gt { exch pop exch pop exch pop dup 0.912200 sub 10.598822 mul 0.266667 add exch dup 0.912200 sub 8.560588 mul 0.184314 add exch dup 0.912200 sub 5.625529 mul 0.086275 add exch } if dup 0.960300 gt { exch pop exch pop exch pop dup 0.960300 sub 5.136567 mul 0.776471 add exch dup 0.960300 sub 8.791431 mul 0.596078 add exch dup 0.960300 sub 6.025589 mul 0.356863 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.980392 exch 0.945098 exch 0.596078 exch } if pop }
endstream
endobj

10 0 obj
  2880
endobj

11 0 obj
  << /Length 12 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.972549 exch 0.945098 exch 0.592157 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -4.901960 mul 0.972549 add exch dup 0.000000 sub -8.725490 mul 0.945098 add exch dup 0.000000 sub -5.882353 mul 0.592157 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub -5.098039 mul 0.776471 add exch dup 0.040000 sub -4.117647 mul 0.596078 add exch dup 0.040000 sub -2.705883 mul 0.356863 add exch } if dup 0.140000 gt { exch pop exch pop exch pop dup 0.140000 sub 5.154062 mul 0.266667 add exch dup 0.140000 sub 3.753502 mul 0.184314 add exch dup 0.140000 sub 2.128852 mul 0.086275 add exch } if dup 0.210000 gt { exch pop exch pop exch pop dup 0.210000 sub 4.313725 mul 0.627451 add exch dup 0.210000 sub 6.225491 mul 0.447059 add exch dup 0.210000 sub 4.460785 mul 0.235294 add exch } if dup 0.290000 gt { exch pop exch pop exch pop dup 0.290000 sub -1.288515 mul 0.972549 add exch dup 0.290000 sub -4.761903 mul 0.945098 add exch dup 0.290000 sub -3.473388 mul 0.592157 add exch } if dup 0.360000 gt { exch pop exch pop exch pop dup 0.360000 sub -3.455029 mul 0.882353 add exch dup 0.360000 sub -2.398715 mul 0.611765 add exch dup 0.360000 sub -1.474439 mul 0.349020 add exch } if dup 0.538200 gt { exch pop exch pop exch pop dup 0.538200 sub 9.996155 mul 0.266667 add exch dup 0.538200 sub 8.073818 mul 0.184314 add exch dup 0.538200 sub 5.305652 mul 0.086275 add exch } if dup 0.589200 gt { exch pop exch pop exch pop dup 0.589200 sub 3.844675 mul 0.776471 add exch dup 0.589200 sub 6.843522 mul 0.596078 add exch dup 0.589200 sub 4.613611 mul 0.356863 add exch } if dup 0.640200 gt { exch pop exch pop exch pop dup 0.640200 sub -2.895542 mul 0.972549 add exch dup 0.640200 sub -5.350457 mul 0.945098 add exch dup 0.640200 sub -3.965634 mul 0.592157 add exch } if dup 0.702500 gt { exch pop exch pop exch pop dup 0.702500 sub 3.163616 mul 0.792157 add exch dup 0.702500 sub 5.602237 mul 0.611765 add exch dup 0.702500 sub 4.218155 mul 0.345098 add exch } if dup 0.762000 gt { exch pop exch pop exch pop dup 0.762000 sub -2.998848 mul 0.980392 add exch dup 0.762000 sub -5.132644 mul 0.945098 add exch dup 0.762000 sub -3.517880 mul 0.596078 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub -6.201994 mul 0.776471 add exch dup 0.830000 sub -5.009304 mul 0.596078 add exch dup 0.830000 sub -3.291828 mul 0.356863 add exch } if dup 0.912200 gt { exch pop exch pop exch pop dup 0.912200 sub 10.598822 mul 0.266667 add exch dup 0.912200 sub 8.560588 mul 0.184314 add exch dup 0.912200 sub 5.625529 mul 0.086275 add exch } if dup 0.960300 gt { exch pop exch pop exch pop dup 0.960300 sub 5.136567 mul 0.776471 add exch dup 0.960300 sub 8.791431 mul 0.596078 add exch dup 0.960300 sub 6.025589 mul 0.356863 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.980392 exch 0.945098 exch 0.596078 exch } if pop }
endstream
endobj

12 0 obj
  2880
endobj

13 0 obj
  << /Length 14 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.266667 exch 0.184314 exch 0.086275 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 3.828016 mul 0.266667 add exch dup 0.000000 sub 3.022118 mul 0.184314 add exch dup 0.000000 sub 2.014745 mul 0.086275 add exch } if dup 0.019464 gt { exch pop exch pop exch pop dup 0.019464 sub 3.288795 mul 0.341176 add exch dup 0.019464 sub 2.708420 mul 0.243137 add exch dup 0.019464 sub 1.741127 mul 0.125490 add exch } if dup 0.060006 gt { exch pop exch pop exch pop dup 0.060006 sub 2.524579 mul 0.474510 add exch dup 0.060006 sub 1.983597 mul 0.352941 add exch dup 0.060006 sub 1.352453 mul 0.196078 add exch } if dup 0.103500 gt { exch pop exch pop exch pop dup 0.103500 sub 1.851385 mul 0.584314 add exch dup 0.103500 sub 1.514770 mul 0.439216 add exch dup 0.103500 sub 0.925692 mul 0.254902 add exch } if dup 0.150100 gt { exch pop exch pop exch pop dup 0.150100 sub 1.144426 mul 0.670588 add exch dup 0.150100 sub 0.915541 mul 0.509804 add exch dup 0.150100 sub 0.610361 mul 0.298039 add exch } if dup 0.201500 gt { exch pop exch pop exch pop dup 0.201500 sub 0.591191 mul 0.729412 add exch dup 0.201500 sub 0.459815 mul 0.556863 add exch dup 0.201500 sub 0.328440 mul 0.329412 add exch } if dup 0.261200 gt { exch pop exch pop exch pop dup 0.261200 sub 0.134300 mul 0.764706 add exch dup 0.261200 sub 0.134300 mul 0.584314 add exch dup 0.261200 sub 0.089534 mul 0.349020 add exch } if dup 0.348800 gt { exch pop exch pop exch pop dup 0.348800 sub 0.260137 mul 0.776471 add exch dup 0.348800 sub 0.520274 mul 0.596078 add exch dup 0.348800 sub 0.325172 mul 0.356863 add exch } if dup 0.409100 gt { exch pop exch pop exch pop dup 0.409100 sub 0.545245 mul 0.792157 add exch dup 0.409100 sub 0.922722 mul 0.627451 add exch dup 0.409100 sub 0.629129 mul 0.376471 add exch } if dup 0.502600 gt { exch pop exch pop exch pop dup 0.502600 sub 0.684392 mul 0.843137 add exch dup 0.502600 sub 1.197687 mul 0.713726 add exch dup 0.502600 sub 0.821271 mul 0.435294 add exch } if dup 0.617200 gt { exch pop exch pop exch pop dup 0.617200 sub 0.785522 mul 0.921569 add exch dup 0.617200 sub 1.450195 mul 0.850980 add exch dup 0.617200 sub 0.966797 mul 0.529412 add exch } if dup 0.682100 gt { exch pop exch pop exch pop dup 0.682100 sub -1.419293 mul 0.972549 add exch dup 0.682100 sub -2.622607 mul 0.945098 add exch dup 0.682100 sub -1.943815 mul 0.592157 add exch } if dup 0.809200 gt { exch pop exch pop exch pop dup 0.809200 sub -2.754141 mul 0.792157 add exch dup 0.809200 sub -2.240309 mul 0.611765 add exch dup 0.809200 sub -1.356517 mul 0.345098 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.266667 exch 0.184314 exch 0.086275 exch } if pop }
endstream
endobj

14 0 obj
  2670
endobj

15 0 obj
  << /Length 16 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.972549 exch 0.945098 exch 0.592157 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -4.901960 mul 0.972549 add exch dup 0.000000 sub -8.725490 mul 0.945098 add exch dup 0.000000 sub -5.882353 mul 0.592157 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub -5.098039 mul 0.776471 add exch dup 0.040000 sub -4.117647 mul 0.596078 add exch dup 0.040000 sub -2.705883 mul 0.356863 add exch } if dup 0.140000 gt { exch pop exch pop exch pop dup 0.140000 sub 5.154062 mul 0.266667 add exch dup 0.140000 sub 3.753502 mul 0.184314 add exch dup 0.140000 sub 2.128852 mul 0.086275 add exch } if dup 0.210000 gt { exch pop exch pop exch pop dup 0.210000 sub 4.313725 mul 0.627451 add exch dup 0.210000 sub 6.225491 mul 0.447059 add exch dup 0.210000 sub 4.460785 mul 0.235294 add exch } if dup 0.290000 gt { exch pop exch pop exch pop dup 0.290000 sub -1.288515 mul 0.972549 add exch dup 0.290000 sub -4.761903 mul 0.945098 add exch dup 0.290000 sub -3.473388 mul 0.592157 add exch } if dup 0.360000 gt { exch pop exch pop exch pop dup 0.360000 sub -3.455029 mul 0.882353 add exch dup 0.360000 sub -2.398715 mul 0.611765 add exch dup 0.360000 sub -1.474439 mul 0.349020 add exch } if dup 0.538200 gt { exch pop exch pop exch pop dup 0.538200 sub 9.996155 mul 0.266667 add exch dup 0.538200 sub 8.073818 mul 0.184314 add exch dup 0.538200 sub 5.305652 mul 0.086275 add exch } if dup 0.589200 gt { exch pop exch pop exch pop dup 0.589200 sub 3.844675 mul 0.776471 add exch dup 0.589200 sub 6.843522 mul 0.596078 add exch dup 0.589200 sub 4.613611 mul 0.356863 add exch } if dup 0.640200 gt { exch pop exch pop exch pop dup 0.640200 sub -2.895542 mul 0.972549 add exch dup 0.640200 sub -5.350457 mul 0.945098 add exch dup 0.640200 sub -3.965634 mul 0.592157 add exch } if dup 0.702500 gt { exch pop exch pop exch pop dup 0.702500 sub 3.163616 mul 0.792157 add exch dup 0.702500 sub 5.602237 mul 0.611765 add exch dup 0.702500 sub 4.218155 mul 0.345098 add exch } if dup 0.762000 gt { exch pop exch pop exch pop dup 0.762000 sub -2.998848 mul 0.980392 add exch dup 0.762000 sub -5.132644 mul 0.945098 add exch dup 0.762000 sub -3.517880 mul 0.596078 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub -6.201994 mul 0.776471 add exch dup 0.830000 sub -5.009304 mul 0.596078 add exch dup 0.830000 sub -3.291828 mul 0.356863 add exch } if dup 0.912200 gt { exch pop exch pop exch pop dup 0.912200 sub 10.598822 mul 0.266667 add exch dup 0.912200 sub 8.560588 mul 0.184314 add exch dup 0.912200 sub 5.625529 mul 0.086275 add exch } if dup 0.960300 gt { exch pop exch pop exch pop dup 0.960300 sub 5.136567 mul 0.776471 add exch dup 0.960300 sub 8.791431 mul 0.596078 add exch dup 0.960300 sub 6.025589 mul 0.356863 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.980392 exch 0.945098 exch 0.596078 exch } if pop }
endstream
endobj

16 0 obj
  2880
endobj

17 0 obj
  << /Length 18 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.266667 exch 0.184314 exch 0.086275 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 3.828016 mul 0.266667 add exch dup 0.000000 sub 3.022118 mul 0.184314 add exch dup 0.000000 sub 2.014745 mul 0.086275 add exch } if dup 0.019464 gt { exch pop exch pop exch pop dup 0.019464 sub 3.288795 mul 0.341176 add exch dup 0.019464 sub 2.708420 mul 0.243137 add exch dup 0.019464 sub 1.741127 mul 0.125490 add exch } if dup 0.060006 gt { exch pop exch pop exch pop dup 0.060006 sub 2.524579 mul 0.474510 add exch dup 0.060006 sub 1.983597 mul 0.352941 add exch dup 0.060006 sub 1.352453 mul 0.196078 add exch } if dup 0.103500 gt { exch pop exch pop exch pop dup 0.103500 sub 1.851385 mul 0.584314 add exch dup 0.103500 sub 1.514770 mul 0.439216 add exch dup 0.103500 sub 0.925692 mul 0.254902 add exch } if dup 0.150100 gt { exch pop exch pop exch pop dup 0.150100 sub 1.144426 mul 0.670588 add exch dup 0.150100 sub 0.915541 mul 0.509804 add exch dup 0.150100 sub 0.610361 mul 0.298039 add exch } if dup 0.201500 gt { exch pop exch pop exch pop dup 0.201500 sub 0.591191 mul 0.729412 add exch dup 0.201500 sub 0.459815 mul 0.556863 add exch dup 0.201500 sub 0.328440 mul 0.329412 add exch } if dup 0.261200 gt { exch pop exch pop exch pop dup 0.261200 sub 0.134300 mul 0.764706 add exch dup 0.261200 sub 0.134300 mul 0.584314 add exch dup 0.261200 sub 0.089534 mul 0.349020 add exch } if dup 0.348800 gt { exch pop exch pop exch pop dup 0.348800 sub 0.260137 mul 0.776471 add exch dup 0.348800 sub 0.520274 mul 0.596078 add exch dup 0.348800 sub 0.325172 mul 0.356863 add exch } if dup 0.409100 gt { exch pop exch pop exch pop dup 0.409100 sub 0.545245 mul 0.792157 add exch dup 0.409100 sub 0.922722 mul 0.627451 add exch dup 0.409100 sub 0.629129 mul 0.376471 add exch } if dup 0.502600 gt { exch pop exch pop exch pop dup 0.502600 sub 0.684392 mul 0.843137 add exch dup 0.502600 sub 1.197687 mul 0.713726 add exch dup 0.502600 sub 0.821271 mul 0.435294 add exch } if dup 0.617200 gt { exch pop exch pop exch pop dup 0.617200 sub 0.785522 mul 0.921569 add exch dup 0.617200 sub 1.450195 mul 0.850980 add exch dup 0.617200 sub 0.966797 mul 0.529412 add exch } if dup 0.682100 gt { exch pop exch pop exch pop dup 0.682100 sub -1.419293 mul 0.972549 add exch dup 0.682100 sub -2.622607 mul 0.945098 add exch dup 0.682100 sub -1.943815 mul 0.592157 add exch } if dup 0.809200 gt { exch pop exch pop exch pop dup 0.809200 sub -2.754141 mul 0.792157 add exch dup 0.809200 sub -2.240309 mul 0.611765 add exch dup 0.809200 sub -1.356517 mul 0.345098 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.266667 exch 0.184314 exch 0.086275 exch } if pop }
endstream
endobj

18 0 obj
  2670
endobj

19 0 obj
  << /Length 20 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.972549 exch 0.945098 exch 0.592157 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -4.901960 mul 0.972549 add exch dup 0.000000 sub -8.725490 mul 0.945098 add exch dup 0.000000 sub -5.882353 mul 0.592157 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub -5.098039 mul 0.776471 add exch dup 0.040000 sub -4.117647 mul 0.596078 add exch dup 0.040000 sub -2.705883 mul 0.356863 add exch } if dup 0.140000 gt { exch pop exch pop exch pop dup 0.140000 sub 5.154062 mul 0.266667 add exch dup 0.140000 sub 3.753502 mul 0.184314 add exch dup 0.140000 sub 2.128852 mul 0.086275 add exch } if dup 0.210000 gt { exch pop exch pop exch pop dup 0.210000 sub 4.313725 mul 0.627451 add exch dup 0.210000 sub 6.225491 mul 0.447059 add exch dup 0.210000 sub 4.460785 mul 0.235294 add exch } if dup 0.290000 gt { exch pop exch pop exch pop dup 0.290000 sub -1.288515 mul 0.972549 add exch dup 0.290000 sub -4.761903 mul 0.945098 add exch dup 0.290000 sub -3.473388 mul 0.592157 add exch } if dup 0.360000 gt { exch pop exch pop exch pop dup 0.360000 sub -3.455029 mul 0.882353 add exch dup 0.360000 sub -2.398715 mul 0.611765 add exch dup 0.360000 sub -1.474439 mul 0.349020 add exch } if dup 0.538200 gt { exch pop exch pop exch pop dup 0.538200 sub 9.996155 mul 0.266667 add exch dup 0.538200 sub 8.073818 mul 0.184314 add exch dup 0.538200 sub 5.305652 mul 0.086275 add exch } if dup 0.589200 gt { exch pop exch pop exch pop dup 0.589200 sub 3.844675 mul 0.776471 add exch dup 0.589200 sub 6.843522 mul 0.596078 add exch dup 0.589200 sub 4.613611 mul 0.356863 add exch } if dup 0.640200 gt { exch pop exch pop exch pop dup 0.640200 sub -2.895542 mul 0.972549 add exch dup 0.640200 sub -5.350457 mul 0.945098 add exch dup 0.640200 sub -3.965634 mul 0.592157 add exch } if dup 0.702500 gt { exch pop exch pop exch pop dup 0.702500 sub 3.163616 mul 0.792157 add exch dup 0.702500 sub 5.602237 mul 0.611765 add exch dup 0.702500 sub 4.218155 mul 0.345098 add exch } if dup 0.762000 gt { exch pop exch pop exch pop dup 0.762000 sub -2.998848 mul 0.980392 add exch dup 0.762000 sub -5.132644 mul 0.945098 add exch dup 0.762000 sub -3.517880 mul 0.596078 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub -6.201994 mul 0.776471 add exch dup 0.830000 sub -5.009304 mul 0.596078 add exch dup 0.830000 sub -3.291828 mul 0.356863 add exch } if dup 0.912200 gt { exch pop exch pop exch pop dup 0.912200 sub 10.598822 mul 0.266667 add exch dup 0.912200 sub 8.560588 mul 0.184314 add exch dup 0.912200 sub 5.625529 mul 0.086275 add exch } if dup 0.960300 gt { exch pop exch pop exch pop dup 0.960300 sub 5.136567 mul 0.776471 add exch dup 0.960300 sub 8.791431 mul 0.596078 add exch dup 0.960300 sub 6.025589 mul 0.356863 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.980392 exch 0.945098 exch 0.596078 exch } if pop }
endstream
endobj

20 0 obj
  2880
endobj

21 0 obj
  << /Length 22 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.972549 exch 0.945098 exch 0.592157 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -4.901960 mul 0.972549 add exch dup 0.000000 sub -8.725490 mul 0.945098 add exch dup 0.000000 sub -5.882353 mul 0.592157 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub 0.784314 mul 0.776471 add exch dup 0.040000 sub 1.396078 mul 0.596078 add exch dup 0.040000 sub 0.941177 mul 0.356863 add exch } if dup 0.290000 gt { exch pop exch pop exch pop dup 0.290000 sub -0.841381 mul 0.972549 add exch dup 0.290000 sub -3.109453 mul 0.945098 add exch dup 0.290000 sub -2.268072 mul 0.592157 add exch } if dup 0.397200 gt { exch pop exch pop exch pop dup 0.397200 sub -2.242459 mul 0.882353 add exch dup 0.397200 sub -1.558782 mul 0.611765 add exch dup 0.397200 sub -0.957147 mul 0.349020 add exch } if dup 0.540600 gt { exch pop exch pop exch pop dup 0.540600 sub 4.437987 mul 0.560784 add exch dup 0.540600 sub 4.276607 mul 0.388235 add exch dup 0.540600 sub 2.985555 mul 0.211765 add exch } if dup 0.589200 gt { exch pop exch pop exch pop dup 0.589200 sub 3.844675 mul 0.776471 add exch dup 0.589200 sub 6.843522 mul 0.596078 add exch dup 0.589200 sub 4.613611 mul 0.356863 add exch } if dup 0.640200 gt { exch pop exch pop exch pop dup 0.640200 sub -2.895542 mul 0.972549 add exch dup 0.640200 sub -5.350457 mul 0.945098 add exch dup 0.640200 sub -3.965634 mul 0.592157 add exch } if dup 0.702500 gt { exch pop exch pop exch pop dup 0.702500 sub 3.163616 mul 0.792157 add exch dup 0.702500 sub 5.602237 mul 0.611765 add exch dup 0.702500 sub 4.218155 mul 0.345098 add exch } if dup 0.762000 gt { exch pop exch pop exch pop dup 0.762000 sub -2.998848 mul 0.980392 add exch dup 0.762000 sub -5.132644 mul 0.945098 add exch dup 0.762000 sub -3.517880 mul 0.596078 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub -6.201994 mul 0.776471 add exch dup 0.830000 sub -5.009304 mul 0.596078 add exch dup 0.830000 sub -3.291828 mul 0.356863 add exch } if dup 0.912200 gt { exch pop exch pop exch pop dup 0.912200 sub 10.598822 mul 0.266667 add exch dup 0.912200 sub 8.560588 mul 0.184314 add exch dup 0.912200 sub 5.625529 mul 0.086275 add exch } if dup 0.960300 gt { exch pop exch pop exch pop dup 0.960300 sub 5.136567 mul 0.776471 add exch dup 0.960300 sub 8.791431 mul 0.596078 add exch dup 0.960300 sub 6.025589 mul 0.356863 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.980392 exch 0.945098 exch 0.596078 exch } if pop }
endstream
endobj

22 0 obj
  2489
endobj

23 0 obj
  << /Length 24 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.972549 exch 0.945098 exch 0.592157 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -4.901960 mul 0.972549 add exch dup 0.000000 sub -8.725490 mul 0.945098 add exch dup 0.000000 sub -5.882353 mul 0.592157 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub -5.098039 mul 0.776471 add exch dup 0.040000 sub -4.117647 mul 0.596078 add exch dup 0.040000 sub -2.705883 mul 0.356863 add exch } if dup 0.140000 gt { exch pop exch pop exch pop dup 0.140000 sub 5.154062 mul 0.266667 add exch dup 0.140000 sub 3.753502 mul 0.184314 add exch dup 0.140000 sub 2.128852 mul 0.086275 add exch } if dup 0.210000 gt { exch pop exch pop exch pop dup 0.210000 sub 4.313725 mul 0.627451 add exch dup 0.210000 sub 6.225491 mul 0.447059 add exch dup 0.210000 sub 4.460785 mul 0.235294 add exch } if dup 0.290000 gt { exch pop exch pop exch pop dup 0.290000 sub -1.288515 mul 0.972549 add exch dup 0.290000 sub -4.761903 mul 0.945098 add exch dup 0.290000 sub -3.473388 mul 0.592157 add exch } if dup 0.360000 gt { exch pop exch pop exch pop dup 0.360000 sub -3.455029 mul 0.882353 add exch dup 0.360000 sub -2.398715 mul 0.611765 add exch dup 0.360000 sub -1.474439 mul 0.349020 add exch } if dup 0.538200 gt { exch pop exch pop exch pop dup 0.538200 sub 9.996155 mul 0.266667 add exch dup 0.538200 sub 8.073818 mul 0.184314 add exch dup 0.538200 sub 5.305652 mul 0.086275 add exch } if dup 0.589200 gt { exch pop exch pop exch pop dup 0.589200 sub 3.844675 mul 0.776471 add exch dup 0.589200 sub 6.843522 mul 0.596078 add exch dup 0.589200 sub 4.613611 mul 0.356863 add exch } if dup 0.640200 gt { exch pop exch pop exch pop dup 0.640200 sub -2.895542 mul 0.972549 add exch dup 0.640200 sub -5.350457 mul 0.945098 add exch dup 0.640200 sub -3.965634 mul 0.592157 add exch } if dup 0.702500 gt { exch pop exch pop exch pop dup 0.702500 sub 3.163616 mul 0.792157 add exch dup 0.702500 sub 5.602237 mul 0.611765 add exch dup 0.702500 sub 4.218155 mul 0.345098 add exch } if dup 0.762000 gt { exch pop exch pop exch pop dup 0.762000 sub -2.998848 mul 0.980392 add exch dup 0.762000 sub -5.132644 mul 0.945098 add exch dup 0.762000 sub -3.517880 mul 0.596078 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub -6.201994 mul 0.776471 add exch dup 0.830000 sub -5.009304 mul 0.596078 add exch dup 0.830000 sub -3.291828 mul 0.356863 add exch } if dup 0.912200 gt { exch pop exch pop exch pop dup 0.912200 sub 10.598822 mul 0.266667 add exch dup 0.912200 sub 8.560588 mul 0.184314 add exch dup 0.912200 sub 5.625529 mul 0.086275 add exch } if dup 0.960300 gt { exch pop exch pop exch pop dup 0.960300 sub 5.136567 mul 0.776471 add exch dup 0.960300 sub 8.791431 mul 0.596078 add exch dup 0.960300 sub 6.025589 mul 0.356863 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.980392 exch 0.945098 exch 0.596078 exch } if pop }
endstream
endobj

24 0 obj
  2880
endobj

25 0 obj
  << /Length 26 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.972549 exch 0.945098 exch 0.592157 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -4.901960 mul 0.972549 add exch dup 0.000000 sub -8.725490 mul 0.945098 add exch dup 0.000000 sub -5.882353 mul 0.592157 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub -5.098039 mul 0.776471 add exch dup 0.040000 sub -4.117647 mul 0.596078 add exch dup 0.040000 sub -2.705883 mul 0.356863 add exch } if dup 0.140000 gt { exch pop exch pop exch pop dup 0.140000 sub 5.154062 mul 0.266667 add exch dup 0.140000 sub 3.753502 mul 0.184314 add exch dup 0.140000 sub 2.128852 mul 0.086275 add exch } if dup 0.210000 gt { exch pop exch pop exch pop dup 0.210000 sub 4.313725 mul 0.627451 add exch dup 0.210000 sub 6.225491 mul 0.447059 add exch dup 0.210000 sub 4.460785 mul 0.235294 add exch } if dup 0.290000 gt { exch pop exch pop exch pop dup 0.290000 sub -1.288515 mul 0.972549 add exch dup 0.290000 sub -4.761903 mul 0.945098 add exch dup 0.290000 sub -3.473388 mul 0.592157 add exch } if dup 0.360000 gt { exch pop exch pop exch pop dup 0.360000 sub -3.455029 mul 0.882353 add exch dup 0.360000 sub -2.398715 mul 0.611765 add exch dup 0.360000 sub -1.474439 mul 0.349020 add exch } if dup 0.538200 gt { exch pop exch pop exch pop dup 0.538200 sub 9.996155 mul 0.266667 add exch dup 0.538200 sub 8.073818 mul 0.184314 add exch dup 0.538200 sub 5.305652 mul 0.086275 add exch } if dup 0.589200 gt { exch pop exch pop exch pop dup 0.589200 sub 3.844675 mul 0.776471 add exch dup 0.589200 sub 6.843522 mul 0.596078 add exch dup 0.589200 sub 4.613611 mul 0.356863 add exch } if dup 0.640200 gt { exch pop exch pop exch pop dup 0.640200 sub -2.895542 mul 0.972549 add exch dup 0.640200 sub -5.350457 mul 0.945098 add exch dup 0.640200 sub -3.965634 mul 0.592157 add exch } if dup 0.702500 gt { exch pop exch pop exch pop dup 0.702500 sub 3.163616 mul 0.792157 add exch dup 0.702500 sub 5.602237 mul 0.611765 add exch dup 0.702500 sub 4.218155 mul 0.345098 add exch } if dup 0.762000 gt { exch pop exch pop exch pop dup 0.762000 sub -2.998848 mul 0.980392 add exch dup 0.762000 sub -5.132644 mul 0.945098 add exch dup 0.762000 sub -3.517880 mul 0.596078 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub -6.201994 mul 0.776471 add exch dup 0.830000 sub -5.009304 mul 0.596078 add exch dup 0.830000 sub -3.291828 mul 0.356863 add exch } if dup 0.912200 gt { exch pop exch pop exch pop dup 0.912200 sub 10.598822 mul 0.266667 add exch dup 0.912200 sub 8.560588 mul 0.184314 add exch dup 0.912200 sub 5.625529 mul 0.086275 add exch } if dup 0.960300 gt { exch pop exch pop exch pop dup 0.960300 sub 5.136567 mul 0.776471 add exch dup 0.960300 sub 8.791431 mul 0.596078 add exch dup 0.960300 sub 6.025589 mul 0.356863 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.980392 exch 0.945098 exch 0.596078 exch } if pop }
endstream
endobj

26 0 obj
  2880
endobj

27 0 obj
  << /Length 28 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.972549 exch 0.945098 exch 0.592157 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -4.901960 mul 0.972549 add exch dup 0.000000 sub -8.725490 mul 0.945098 add exch dup 0.000000 sub -5.882353 mul 0.592157 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub -5.098039 mul 0.776471 add exch dup 0.040000 sub -4.117647 mul 0.596078 add exch dup 0.040000 sub -2.705883 mul 0.356863 add exch } if dup 0.140000 gt { exch pop exch pop exch pop dup 0.140000 sub 5.154062 mul 0.266667 add exch dup 0.140000 sub 3.753502 mul 0.184314 add exch dup 0.140000 sub 2.128852 mul 0.086275 add exch } if dup 0.210000 gt { exch pop exch pop exch pop dup 0.210000 sub 4.313725 mul 0.627451 add exch dup 0.210000 sub 6.225491 mul 0.447059 add exch dup 0.210000 sub 4.460785 mul 0.235294 add exch } if dup 0.290000 gt { exch pop exch pop exch pop dup 0.290000 sub -1.288515 mul 0.972549 add exch dup 0.290000 sub -4.761903 mul 0.945098 add exch dup 0.290000 sub -3.473388 mul 0.592157 add exch } if dup 0.360000 gt { exch pop exch pop exch pop dup 0.360000 sub -3.455029 mul 0.882353 add exch dup 0.360000 sub -2.398715 mul 0.611765 add exch dup 0.360000 sub -1.474439 mul 0.349020 add exch } if dup 0.538200 gt { exch pop exch pop exch pop dup 0.538200 sub 9.996155 mul 0.266667 add exch dup 0.538200 sub 8.073818 mul 0.184314 add exch dup 0.538200 sub 5.305652 mul 0.086275 add exch } if dup 0.589200 gt { exch pop exch pop exch pop dup 0.589200 sub 3.844675 mul 0.776471 add exch dup 0.589200 sub 6.843522 mul 0.596078 add exch dup 0.589200 sub 4.613611 mul 0.356863 add exch } if dup 0.640200 gt { exch pop exch pop exch pop dup 0.640200 sub -2.895542 mul 0.972549 add exch dup 0.640200 sub -5.350457 mul 0.945098 add exch dup 0.640200 sub -3.965634 mul 0.592157 add exch } if dup 0.702500 gt { exch pop exch pop exch pop dup 0.702500 sub 3.163616 mul 0.792157 add exch dup 0.702500 sub 5.602237 mul 0.611765 add exch dup 0.702500 sub 4.218155 mul 0.345098 add exch } if dup 0.762000 gt { exch pop exch pop exch pop dup 0.762000 sub -2.998848 mul 0.980392 add exch dup 0.762000 sub -5.132644 mul 0.945098 add exch dup 0.762000 sub -3.517880 mul 0.596078 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub -6.201994 mul 0.776471 add exch dup 0.830000 sub -5.009304 mul 0.596078 add exch dup 0.830000 sub -3.291828 mul 0.356863 add exch } if dup 0.912200 gt { exch pop exch pop exch pop dup 0.912200 sub 10.598822 mul 0.266667 add exch dup 0.912200 sub 8.560588 mul 0.184314 add exch dup 0.912200 sub 5.625529 mul 0.086275 add exch } if dup 0.960300 gt { exch pop exch pop exch pop dup 0.960300 sub 5.136567 mul 0.776471 add exch dup 0.960300 sub 8.791431 mul 0.596078 add exch dup 0.960300 sub 6.025589 mul 0.356863 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.980392 exch 0.945098 exch 0.596078 exch } if pop }
endstream
endobj

28 0 obj
  2880
endobj

29 0 obj
  << /Length 30 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.972549 exch 0.945098 exch 0.592157 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -4.901960 mul 0.972549 add exch dup 0.000000 sub -8.725490 mul 0.945098 add exch dup 0.000000 sub -5.882353 mul 0.592157 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub 0.784314 mul 0.776471 add exch dup 0.040000 sub 1.396078 mul 0.596078 add exch dup 0.040000 sub 0.941177 mul 0.356863 add exch } if dup 0.290000 gt { exch pop exch pop exch pop dup 0.290000 sub -0.841381 mul 0.972549 add exch dup 0.290000 sub -3.109453 mul 0.945098 add exch dup 0.290000 sub -2.268072 mul 0.592157 add exch } if dup 0.397200 gt { exch pop exch pop exch pop dup 0.397200 sub -2.242459 mul 0.882353 add exch dup 0.397200 sub -1.558782 mul 0.611765 add exch dup 0.397200 sub -0.957147 mul 0.349020 add exch } if dup 0.540600 gt { exch pop exch pop exch pop dup 0.540600 sub 4.437987 mul 0.560784 add exch dup 0.540600 sub 4.276607 mul 0.388235 add exch dup 0.540600 sub 2.985555 mul 0.211765 add exch } if dup 0.589200 gt { exch pop exch pop exch pop dup 0.589200 sub 3.844675 mul 0.776471 add exch dup 0.589200 sub 6.843522 mul 0.596078 add exch dup 0.589200 sub 4.613611 mul 0.356863 add exch } if dup 0.640200 gt { exch pop exch pop exch pop dup 0.640200 sub -2.895542 mul 0.972549 add exch dup 0.640200 sub -5.350457 mul 0.945098 add exch dup 0.640200 sub -3.965634 mul 0.592157 add exch } if dup 0.702500 gt { exch pop exch pop exch pop dup 0.702500 sub 3.163616 mul 0.792157 add exch dup 0.702500 sub 5.602237 mul 0.611765 add exch dup 0.702500 sub 4.218155 mul 0.345098 add exch } if dup 0.762000 gt { exch pop exch pop exch pop dup 0.762000 sub -2.998848 mul 0.980392 add exch dup 0.762000 sub -5.132644 mul 0.945098 add exch dup 0.762000 sub -3.517880 mul 0.596078 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub -6.201994 mul 0.776471 add exch dup 0.830000 sub -5.009304 mul 0.596078 add exch dup 0.830000 sub -3.291828 mul 0.356863 add exch } if dup 0.912200 gt { exch pop exch pop exch pop dup 0.912200 sub 10.598822 mul 0.266667 add exch dup 0.912200 sub 8.560588 mul 0.184314 add exch dup 0.912200 sub 5.625529 mul 0.086275 add exch } if dup 0.960300 gt { exch pop exch pop exch pop dup 0.960300 sub 5.136567 mul 0.776471 add exch dup 0.960300 sub 8.791431 mul 0.596078 add exch dup 0.960300 sub 6.025589 mul 0.356863 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.980392 exch 0.945098 exch 0.596078 exch } if pop }
endstream
endobj

30 0 obj
  2489
endobj

31 0 obj
  << /Length 32 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.972549 exch 0.945098 exch 0.592157 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -4.901960 mul 0.972549 add exch dup 0.000000 sub -8.725490 mul 0.945098 add exch dup 0.000000 sub -5.882353 mul 0.592157 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub 0.784314 mul 0.776471 add exch dup 0.040000 sub 1.396078 mul 0.596078 add exch dup 0.040000 sub 0.941177 mul 0.356863 add exch } if dup 0.290000 gt { exch pop exch pop exch pop dup 0.290000 sub -0.841381 mul 0.972549 add exch dup 0.290000 sub -3.109453 mul 0.945098 add exch dup 0.290000 sub -2.268072 mul 0.592157 add exch } if dup 0.397200 gt { exch pop exch pop exch pop dup 0.397200 sub -2.242459 mul 0.882353 add exch dup 0.397200 sub -1.558782 mul 0.611765 add exch dup 0.397200 sub -0.957147 mul 0.349020 add exch } if dup 0.540600 gt { exch pop exch pop exch pop dup 0.540600 sub 4.437987 mul 0.560784 add exch dup 0.540600 sub 4.276607 mul 0.388235 add exch dup 0.540600 sub 2.985555 mul 0.211765 add exch } if dup 0.589200 gt { exch pop exch pop exch pop dup 0.589200 sub 3.844675 mul 0.776471 add exch dup 0.589200 sub 6.843522 mul 0.596078 add exch dup 0.589200 sub 4.613611 mul 0.356863 add exch } if dup 0.640200 gt { exch pop exch pop exch pop dup 0.640200 sub -2.895542 mul 0.972549 add exch dup 0.640200 sub -5.350457 mul 0.945098 add exch dup 0.640200 sub -3.965634 mul 0.592157 add exch } if dup 0.702500 gt { exch pop exch pop exch pop dup 0.702500 sub 3.163616 mul 0.792157 add exch dup 0.702500 sub 5.602237 mul 0.611765 add exch dup 0.702500 sub 4.218155 mul 0.345098 add exch } if dup 0.762000 gt { exch pop exch pop exch pop dup 0.762000 sub -2.998848 mul 0.980392 add exch dup 0.762000 sub -5.132644 mul 0.945098 add exch dup 0.762000 sub -3.517880 mul 0.596078 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub -6.201994 mul 0.776471 add exch dup 0.830000 sub -5.009304 mul 0.596078 add exch dup 0.830000 sub -3.291828 mul 0.356863 add exch } if dup 0.912200 gt { exch pop exch pop exch pop dup 0.912200 sub 10.598822 mul 0.266667 add exch dup 0.912200 sub 8.560588 mul 0.184314 add exch dup 0.912200 sub 5.625529 mul 0.086275 add exch } if dup 0.960300 gt { exch pop exch pop exch pop dup 0.960300 sub 5.136567 mul 0.776471 add exch dup 0.960300 sub 8.791431 mul 0.596078 add exch dup 0.960300 sub 6.025589 mul 0.356863 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.980392 exch 0.945098 exch 0.596078 exch } if pop }
endstream
endobj

32 0 obj
  2489
endobj

33 0 obj
  << /Length 34 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.972549 exch 0.945098 exch 0.592157 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -4.901960 mul 0.972549 add exch dup 0.000000 sub -8.725490 mul 0.945098 add exch dup 0.000000 sub -5.882353 mul 0.592157 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub 0.784314 mul 0.776471 add exch dup 0.040000 sub 1.396078 mul 0.596078 add exch dup 0.040000 sub 0.941177 mul 0.356863 add exch } if dup 0.290000 gt { exch pop exch pop exch pop dup 0.290000 sub -0.841381 mul 0.972549 add exch dup 0.290000 sub -3.109453 mul 0.945098 add exch dup 0.290000 sub -2.268072 mul 0.592157 add exch } if dup 0.397200 gt { exch pop exch pop exch pop dup 0.397200 sub -2.242459 mul 0.882353 add exch dup 0.397200 sub -1.558782 mul 0.611765 add exch dup 0.397200 sub -0.957147 mul 0.349020 add exch } if dup 0.540600 gt { exch pop exch pop exch pop dup 0.540600 sub 4.437987 mul 0.560784 add exch dup 0.540600 sub 4.276607 mul 0.388235 add exch dup 0.540600 sub 2.985555 mul 0.211765 add exch } if dup 0.589200 gt { exch pop exch pop exch pop dup 0.589200 sub 3.844675 mul 0.776471 add exch dup 0.589200 sub 6.843522 mul 0.596078 add exch dup 0.589200 sub 4.613611 mul 0.356863 add exch } if dup 0.640200 gt { exch pop exch pop exch pop dup 0.640200 sub -2.895542 mul 0.972549 add exch dup 0.640200 sub -5.350457 mul 0.945098 add exch dup 0.640200 sub -3.965634 mul 0.592157 add exch } if dup 0.702500 gt { exch pop exch pop exch pop dup 0.702500 sub 3.163616 mul 0.792157 add exch dup 0.702500 sub 5.602237 mul 0.611765 add exch dup 0.702500 sub 4.218155 mul 0.345098 add exch } if dup 0.762000 gt { exch pop exch pop exch pop dup 0.762000 sub -2.998848 mul 0.980392 add exch dup 0.762000 sub -5.132644 mul 0.945098 add exch dup 0.762000 sub -3.517880 mul 0.596078 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub -6.201994 mul 0.776471 add exch dup 0.830000 sub -5.009304 mul 0.596078 add exch dup 0.830000 sub -3.291828 mul 0.356863 add exch } if dup 0.912200 gt { exch pop exch pop exch pop dup 0.912200 sub 10.598822 mul 0.266667 add exch dup 0.912200 sub 8.560588 mul 0.184314 add exch dup 0.912200 sub 5.625529 mul 0.086275 add exch } if dup 0.960300 gt { exch pop exch pop exch pop dup 0.960300 sub 5.136567 mul 0.776471 add exch dup 0.960300 sub 8.791431 mul 0.596078 add exch dup 0.960300 sub 6.025589 mul 0.356863 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.980392 exch 0.945098 exch 0.596078 exch } if pop }
endstream
endobj

34 0 obj
  2489
endobj

35 0 obj
  << /Length 36 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.972549 exch 0.945098 exch 0.592157 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -4.901960 mul 0.972549 add exch dup 0.000000 sub -8.725490 mul 0.945098 add exch dup 0.000000 sub -5.882353 mul 0.592157 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub -5.098039 mul 0.776471 add exch dup 0.040000 sub -4.117647 mul 0.596078 add exch dup 0.040000 sub -2.705883 mul 0.356863 add exch } if dup 0.140000 gt { exch pop exch pop exch pop dup 0.140000 sub 5.154062 mul 0.266667 add exch dup 0.140000 sub 3.753502 mul 0.184314 add exch dup 0.140000 sub 2.128852 mul 0.086275 add exch } if dup 0.210000 gt { exch pop exch pop exch pop dup 0.210000 sub 4.313725 mul 0.627451 add exch dup 0.210000 sub 6.225491 mul 0.447059 add exch dup 0.210000 sub 4.460785 mul 0.235294 add exch } if dup 0.290000 gt { exch pop exch pop exch pop dup 0.290000 sub -1.288515 mul 0.972549 add exch dup 0.290000 sub -4.761903 mul 0.945098 add exch dup 0.290000 sub -3.473388 mul 0.592157 add exch } if dup 0.360000 gt { exch pop exch pop exch pop dup 0.360000 sub -3.455029 mul 0.882353 add exch dup 0.360000 sub -2.398715 mul 0.611765 add exch dup 0.360000 sub -1.474439 mul 0.349020 add exch } if dup 0.538200 gt { exch pop exch pop exch pop dup 0.538200 sub 9.996155 mul 0.266667 add exch dup 0.538200 sub 8.073818 mul 0.184314 add exch dup 0.538200 sub 5.305652 mul 0.086275 add exch } if dup 0.589200 gt { exch pop exch pop exch pop dup 0.589200 sub 3.844675 mul 0.776471 add exch dup 0.589200 sub 6.843522 mul 0.596078 add exch dup 0.589200 sub 4.613611 mul 0.356863 add exch } if dup 0.640200 gt { exch pop exch pop exch pop dup 0.640200 sub -2.895542 mul 0.972549 add exch dup 0.640200 sub -5.350457 mul 0.945098 add exch dup 0.640200 sub -3.965634 mul 0.592157 add exch } if dup 0.702500 gt { exch pop exch pop exch pop dup 0.702500 sub 3.163616 mul 0.792157 add exch dup 0.702500 sub 5.602237 mul 0.611765 add exch dup 0.702500 sub 4.218155 mul 0.345098 add exch } if dup 0.762000 gt { exch pop exch pop exch pop dup 0.762000 sub -2.998848 mul 0.980392 add exch dup 0.762000 sub -5.132644 mul 0.945098 add exch dup 0.762000 sub -3.517880 mul 0.596078 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub -6.201994 mul 0.776471 add exch dup 0.830000 sub -5.009304 mul 0.596078 add exch dup 0.830000 sub -3.291828 mul 0.356863 add exch } if dup 0.912200 gt { exch pop exch pop exch pop dup 0.912200 sub 10.598822 mul 0.266667 add exch dup 0.912200 sub 8.560588 mul 0.184314 add exch dup 0.912200 sub 5.625529 mul 0.086275 add exch } if dup 0.960300 gt { exch pop exch pop exch pop dup 0.960300 sub 5.136567 mul 0.776471 add exch dup 0.960300 sub 8.791431 mul 0.596078 add exch dup 0.960300 sub 6.025589 mul 0.356863 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.980392 exch 0.945098 exch 0.596078 exch } if pop }
endstream
endobj

36 0 obj
  2880
endobj

37 0 obj
  << /Length 38 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.972549 exch 0.945098 exch 0.592157 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -4.901960 mul 0.972549 add exch dup 0.000000 sub -8.725490 mul 0.945098 add exch dup 0.000000 sub -5.882353 mul 0.592157 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub 0.784314 mul 0.776471 add exch dup 0.040000 sub 1.396078 mul 0.596078 add exch dup 0.040000 sub 0.941177 mul 0.356863 add exch } if dup 0.290000 gt { exch pop exch pop exch pop dup 0.290000 sub -0.841381 mul 0.972549 add exch dup 0.290000 sub -3.109453 mul 0.945098 add exch dup 0.290000 sub -2.268072 mul 0.592157 add exch } if dup 0.397200 gt { exch pop exch pop exch pop dup 0.397200 sub -2.242459 mul 0.882353 add exch dup 0.397200 sub -1.558782 mul 0.611765 add exch dup 0.397200 sub -0.957147 mul 0.349020 add exch } if dup 0.540600 gt { exch pop exch pop exch pop dup 0.540600 sub 4.437987 mul 0.560784 add exch dup 0.540600 sub 4.276607 mul 0.388235 add exch dup 0.540600 sub 2.985555 mul 0.211765 add exch } if dup 0.589200 gt { exch pop exch pop exch pop dup 0.589200 sub 3.844675 mul 0.776471 add exch dup 0.589200 sub 6.843522 mul 0.596078 add exch dup 0.589200 sub 4.613611 mul 0.356863 add exch } if dup 0.640200 gt { exch pop exch pop exch pop dup 0.640200 sub -2.895542 mul 0.972549 add exch dup 0.640200 sub -5.350457 mul 0.945098 add exch dup 0.640200 sub -3.965634 mul 0.592157 add exch } if dup 0.702500 gt { exch pop exch pop exch pop dup 0.702500 sub 3.163616 mul 0.792157 add exch dup 0.702500 sub 5.602237 mul 0.611765 add exch dup 0.702500 sub 4.218155 mul 0.345098 add exch } if dup 0.762000 gt { exch pop exch pop exch pop dup 0.762000 sub -2.998848 mul 0.980392 add exch dup 0.762000 sub -5.132644 mul 0.945098 add exch dup 0.762000 sub -3.517880 mul 0.596078 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub -6.201994 mul 0.776471 add exch dup 0.830000 sub -5.009304 mul 0.596078 add exch dup 0.830000 sub -3.291828 mul 0.356863 add exch } if dup 0.912200 gt { exch pop exch pop exch pop dup 0.912200 sub 10.598822 mul 0.266667 add exch dup 0.912200 sub 8.560588 mul 0.184314 add exch dup 0.912200 sub 5.625529 mul 0.086275 add exch } if dup 0.960300 gt { exch pop exch pop exch pop dup 0.960300 sub 5.136567 mul 0.776471 add exch dup 0.960300 sub 8.791431 mul 0.596078 add exch dup 0.960300 sub 6.025589 mul 0.356863 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.980392 exch 0.945098 exch 0.596078 exch } if pop }
endstream
endobj

38 0 obj
  2489
endobj

39 0 obj
  << /Length 40 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.972549 exch 0.945098 exch 0.592157 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -4.901960 mul 0.972549 add exch dup 0.000000 sub -8.725490 mul 0.945098 add exch dup 0.000000 sub -5.882353 mul 0.592157 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub -5.098039 mul 0.776471 add exch dup 0.040000 sub -4.117647 mul 0.596078 add exch dup 0.040000 sub -2.705883 mul 0.356863 add exch } if dup 0.140000 gt { exch pop exch pop exch pop dup 0.140000 sub 5.154062 mul 0.266667 add exch dup 0.140000 sub 3.753502 mul 0.184314 add exch dup 0.140000 sub 2.128852 mul 0.086275 add exch } if dup 0.210000 gt { exch pop exch pop exch pop dup 0.210000 sub 4.313725 mul 0.627451 add exch dup 0.210000 sub 6.225491 mul 0.447059 add exch dup 0.210000 sub 4.460785 mul 0.235294 add exch } if dup 0.290000 gt { exch pop exch pop exch pop dup 0.290000 sub -1.288515 mul 0.972549 add exch dup 0.290000 sub -4.761903 mul 0.945098 add exch dup 0.290000 sub -3.473388 mul 0.592157 add exch } if dup 0.360000 gt { exch pop exch pop exch pop dup 0.360000 sub -3.455029 mul 0.882353 add exch dup 0.360000 sub -2.398715 mul 0.611765 add exch dup 0.360000 sub -1.474439 mul 0.349020 add exch } if dup 0.538200 gt { exch pop exch pop exch pop dup 0.538200 sub 9.996155 mul 0.266667 add exch dup 0.538200 sub 8.073818 mul 0.184314 add exch dup 0.538200 sub 5.305652 mul 0.086275 add exch } if dup 0.589200 gt { exch pop exch pop exch pop dup 0.589200 sub 3.844675 mul 0.776471 add exch dup 0.589200 sub 6.843522 mul 0.596078 add exch dup 0.589200 sub 4.613611 mul 0.356863 add exch } if dup 0.640200 gt { exch pop exch pop exch pop dup 0.640200 sub -2.895542 mul 0.972549 add exch dup 0.640200 sub -5.350457 mul 0.945098 add exch dup 0.640200 sub -3.965634 mul 0.592157 add exch } if dup 0.702500 gt { exch pop exch pop exch pop dup 0.702500 sub 3.163616 mul 0.792157 add exch dup 0.702500 sub 5.602237 mul 0.611765 add exch dup 0.702500 sub 4.218155 mul 0.345098 add exch } if dup 0.762000 gt { exch pop exch pop exch pop dup 0.762000 sub -2.998848 mul 0.980392 add exch dup 0.762000 sub -5.132644 mul 0.945098 add exch dup 0.762000 sub -3.517880 mul 0.596078 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub -6.201994 mul 0.776471 add exch dup 0.830000 sub -5.009304 mul 0.596078 add exch dup 0.830000 sub -3.291828 mul 0.356863 add exch } if dup 0.912200 gt { exch pop exch pop exch pop dup 0.912200 sub 10.598822 mul 0.266667 add exch dup 0.912200 sub 8.560588 mul 0.184314 add exch dup 0.912200 sub 5.625529 mul 0.086275 add exch } if dup 0.960300 gt { exch pop exch pop exch pop dup 0.960300 sub 5.136567 mul 0.776471 add exch dup 0.960300 sub 8.791431 mul 0.596078 add exch dup 0.960300 sub 6.025589 mul 0.356863 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.980392 exch 0.945098 exch 0.596078 exch } if pop }
endstream
endobj

40 0 obj
  2880
endobj

41 0 obj
  << /Length 42 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.972549 exch 0.945098 exch 0.592157 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -4.901960 mul 0.972549 add exch dup 0.000000 sub -8.725490 mul 0.945098 add exch dup 0.000000 sub -5.882353 mul 0.592157 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub -5.098039 mul 0.776471 add exch dup 0.040000 sub -4.117647 mul 0.596078 add exch dup 0.040000 sub -2.705883 mul 0.356863 add exch } if dup 0.140000 gt { exch pop exch pop exch pop dup 0.140000 sub 5.154062 mul 0.266667 add exch dup 0.140000 sub 3.753502 mul 0.184314 add exch dup 0.140000 sub 2.128852 mul 0.086275 add exch } if dup 0.210000 gt { exch pop exch pop exch pop dup 0.210000 sub 4.313725 mul 0.627451 add exch dup 0.210000 sub 6.225491 mul 0.447059 add exch dup 0.210000 sub 4.460785 mul 0.235294 add exch } if dup 0.290000 gt { exch pop exch pop exch pop dup 0.290000 sub -1.288515 mul 0.972549 add exch dup 0.290000 sub -4.761903 mul 0.945098 add exch dup 0.290000 sub -3.473388 mul 0.592157 add exch } if dup 0.360000 gt { exch pop exch pop exch pop dup 0.360000 sub -3.455029 mul 0.882353 add exch dup 0.360000 sub -2.398715 mul 0.611765 add exch dup 0.360000 sub -1.474439 mul 0.349020 add exch } if dup 0.538200 gt { exch pop exch pop exch pop dup 0.538200 sub 9.996155 mul 0.266667 add exch dup 0.538200 sub 8.073818 mul 0.184314 add exch dup 0.538200 sub 5.305652 mul 0.086275 add exch } if dup 0.589200 gt { exch pop exch pop exch pop dup 0.589200 sub 3.844675 mul 0.776471 add exch dup 0.589200 sub 6.843522 mul 0.596078 add exch dup 0.589200 sub 4.613611 mul 0.356863 add exch } if dup 0.640200 gt { exch pop exch pop exch pop dup 0.640200 sub -2.895542 mul 0.972549 add exch dup 0.640200 sub -5.350457 mul 0.945098 add exch dup 0.640200 sub -3.965634 mul 0.592157 add exch } if dup 0.702500 gt { exch pop exch pop exch pop dup 0.702500 sub 3.163616 mul 0.792157 add exch dup 0.702500 sub 5.602237 mul 0.611765 add exch dup 0.702500 sub 4.218155 mul 0.345098 add exch } if dup 0.762000 gt { exch pop exch pop exch pop dup 0.762000 sub -2.998848 mul 0.980392 add exch dup 0.762000 sub -5.132644 mul 0.945098 add exch dup 0.762000 sub -3.517880 mul 0.596078 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub -6.201994 mul 0.776471 add exch dup 0.830000 sub -5.009304 mul 0.596078 add exch dup 0.830000 sub -3.291828 mul 0.356863 add exch } if dup 0.912200 gt { exch pop exch pop exch pop dup 0.912200 sub 10.598822 mul 0.266667 add exch dup 0.912200 sub 8.560588 mul 0.184314 add exch dup 0.912200 sub 5.625529 mul 0.086275 add exch } if dup 0.960300 gt { exch pop exch pop exch pop dup 0.960300 sub 5.136567 mul 0.776471 add exch dup 0.960300 sub 8.791431 mul 0.596078 add exch dup 0.960300 sub 6.025589 mul 0.356863 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.980392 exch 0.945098 exch 0.596078 exch } if pop }
endstream
endobj

42 0 obj
  2880
endobj

43 0 obj
  << /Length 44 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.972549 exch 0.945098 exch 0.592157 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -4.901960 mul 0.972549 add exch dup 0.000000 sub -8.725490 mul 0.945098 add exch dup 0.000000 sub -5.882353 mul 0.592157 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub 0.784314 mul 0.776471 add exch dup 0.040000 sub 1.396078 mul 0.596078 add exch dup 0.040000 sub 0.941177 mul 0.356863 add exch } if dup 0.290000 gt { exch pop exch pop exch pop dup 0.290000 sub -0.841381 mul 0.972549 add exch dup 0.290000 sub -3.109453 mul 0.945098 add exch dup 0.290000 sub -2.268072 mul 0.592157 add exch } if dup 0.397200 gt { exch pop exch pop exch pop dup 0.397200 sub -2.242459 mul 0.882353 add exch dup 0.397200 sub -1.558782 mul 0.611765 add exch dup 0.397200 sub -0.957147 mul 0.349020 add exch } if dup 0.540600 gt { exch pop exch pop exch pop dup 0.540600 sub 4.437987 mul 0.560784 add exch dup 0.540600 sub 4.276607 mul 0.388235 add exch dup 0.540600 sub 2.985555 mul 0.211765 add exch } if dup 0.589200 gt { exch pop exch pop exch pop dup 0.589200 sub 3.844675 mul 0.776471 add exch dup 0.589200 sub 6.843522 mul 0.596078 add exch dup 0.589200 sub 4.613611 mul 0.356863 add exch } if dup 0.640200 gt { exch pop exch pop exch pop dup 0.640200 sub -2.895542 mul 0.972549 add exch dup 0.640200 sub -5.350457 mul 0.945098 add exch dup 0.640200 sub -3.965634 mul 0.592157 add exch } if dup 0.702500 gt { exch pop exch pop exch pop dup 0.702500 sub 3.163616 mul 0.792157 add exch dup 0.702500 sub 5.602237 mul 0.611765 add exch dup 0.702500 sub 4.218155 mul 0.345098 add exch } if dup 0.762000 gt { exch pop exch pop exch pop dup 0.762000 sub -2.998848 mul 0.980392 add exch dup 0.762000 sub -5.132644 mul 0.945098 add exch dup 0.762000 sub -3.517880 mul 0.596078 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub -6.201994 mul 0.776471 add exch dup 0.830000 sub -5.009304 mul 0.596078 add exch dup 0.830000 sub -3.291828 mul 0.356863 add exch } if dup 0.912200 gt { exch pop exch pop exch pop dup 0.912200 sub 10.598822 mul 0.266667 add exch dup 0.912200 sub 8.560588 mul 0.184314 add exch dup 0.912200 sub 5.625529 mul 0.086275 add exch } if dup 0.960300 gt { exch pop exch pop exch pop dup 0.960300 sub 5.136567 mul 0.776471 add exch dup 0.960300 sub 8.791431 mul 0.596078 add exch dup 0.960300 sub 6.025589 mul 0.356863 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.980392 exch 0.945098 exch 0.596078 exch } if pop }
endstream
endobj

44 0 obj
  2489
endobj

45 0 obj
  << /Length 46 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.972549 exch 0.945098 exch 0.592157 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -4.901960 mul 0.972549 add exch dup 0.000000 sub -8.725490 mul 0.945098 add exch dup 0.000000 sub -5.882353 mul 0.592157 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub 0.784314 mul 0.776471 add exch dup 0.040000 sub 1.396078 mul 0.596078 add exch dup 0.040000 sub 0.941177 mul 0.356863 add exch } if dup 0.290000 gt { exch pop exch pop exch pop dup 0.290000 sub -0.841381 mul 0.972549 add exch dup 0.290000 sub -3.109453 mul 0.945098 add exch dup 0.290000 sub -2.268072 mul 0.592157 add exch } if dup 0.397200 gt { exch pop exch pop exch pop dup 0.397200 sub -2.242459 mul 0.882353 add exch dup 0.397200 sub -1.558782 mul 0.611765 add exch dup 0.397200 sub -0.957147 mul 0.349020 add exch } if dup 0.540600 gt { exch pop exch pop exch pop dup 0.540600 sub 4.437987 mul 0.560784 add exch dup 0.540600 sub 4.276607 mul 0.388235 add exch dup 0.540600 sub 2.985555 mul 0.211765 add exch } if dup 0.589200 gt { exch pop exch pop exch pop dup 0.589200 sub 3.844675 mul 0.776471 add exch dup 0.589200 sub 6.843522 mul 0.596078 add exch dup 0.589200 sub 4.613611 mul 0.356863 add exch } if dup 0.640200 gt { exch pop exch pop exch pop dup 0.640200 sub -2.895542 mul 0.972549 add exch dup 0.640200 sub -5.350457 mul 0.945098 add exch dup 0.640200 sub -3.965634 mul 0.592157 add exch } if dup 0.702500 gt { exch pop exch pop exch pop dup 0.702500 sub 3.163616 mul 0.792157 add exch dup 0.702500 sub 5.602237 mul 0.611765 add exch dup 0.702500 sub 4.218155 mul 0.345098 add exch } if dup 0.762000 gt { exch pop exch pop exch pop dup 0.762000 sub -2.998848 mul 0.980392 add exch dup 0.762000 sub -5.132644 mul 0.945098 add exch dup 0.762000 sub -3.517880 mul 0.596078 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub -6.201994 mul 0.776471 add exch dup 0.830000 sub -5.009304 mul 0.596078 add exch dup 0.830000 sub -3.291828 mul 0.356863 add exch } if dup 0.912200 gt { exch pop exch pop exch pop dup 0.912200 sub 10.598822 mul 0.266667 add exch dup 0.912200 sub 8.560588 mul 0.184314 add exch dup 0.912200 sub 5.625529 mul 0.086275 add exch } if dup 0.960300 gt { exch pop exch pop exch pop dup 0.960300 sub 5.136567 mul 0.776471 add exch dup 0.960300 sub 8.791431 mul 0.596078 add exch dup 0.960300 sub 6.025589 mul 0.356863 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.980392 exch 0.945098 exch 0.596078 exch } if pop }
endstream
endobj

46 0 obj
  2489
endobj

47 0 obj
  << /Length 48 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.972549 exch 0.945098 exch 0.592157 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -4.901960 mul 0.972549 add exch dup 0.000000 sub -8.725490 mul 0.945098 add exch dup 0.000000 sub -5.882353 mul 0.592157 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub -5.098039 mul 0.776471 add exch dup 0.040000 sub -4.117647 mul 0.596078 add exch dup 0.040000 sub -2.705883 mul 0.356863 add exch } if dup 0.140000 gt { exch pop exch pop exch pop dup 0.140000 sub 5.154062 mul 0.266667 add exch dup 0.140000 sub 3.753502 mul 0.184314 add exch dup 0.140000 sub 2.128852 mul 0.086275 add exch } if dup 0.210000 gt { exch pop exch pop exch pop dup 0.210000 sub 4.313725 mul 0.627451 add exch dup 0.210000 sub 6.225491 mul 0.447059 add exch dup 0.210000 sub 4.460785 mul 0.235294 add exch } if dup 0.290000 gt { exch pop exch pop exch pop dup 0.290000 sub -1.288515 mul 0.972549 add exch dup 0.290000 sub -4.761903 mul 0.945098 add exch dup 0.290000 sub -3.473388 mul 0.592157 add exch } if dup 0.360000 gt { exch pop exch pop exch pop dup 0.360000 sub -3.455029 mul 0.882353 add exch dup 0.360000 sub -2.398715 mul 0.611765 add exch dup 0.360000 sub -1.474439 mul 0.349020 add exch } if dup 0.538200 gt { exch pop exch pop exch pop dup 0.538200 sub 9.996155 mul 0.266667 add exch dup 0.538200 sub 8.073818 mul 0.184314 add exch dup 0.538200 sub 5.305652 mul 0.086275 add exch } if dup 0.589200 gt { exch pop exch pop exch pop dup 0.589200 sub 3.844675 mul 0.776471 add exch dup 0.589200 sub 6.843522 mul 0.596078 add exch dup 0.589200 sub 4.613611 mul 0.356863 add exch } if dup 0.640200 gt { exch pop exch pop exch pop dup 0.640200 sub -2.895542 mul 0.972549 add exch dup 0.640200 sub -5.350457 mul 0.945098 add exch dup 0.640200 sub -3.965634 mul 0.592157 add exch } if dup 0.702500 gt { exch pop exch pop exch pop dup 0.702500 sub 3.163616 mul 0.792157 add exch dup 0.702500 sub 5.602237 mul 0.611765 add exch dup 0.702500 sub 4.218155 mul 0.345098 add exch } if dup 0.762000 gt { exch pop exch pop exch pop dup 0.762000 sub -2.998848 mul 0.980392 add exch dup 0.762000 sub -5.132644 mul 0.945098 add exch dup 0.762000 sub -3.517880 mul 0.596078 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub -6.201994 mul 0.776471 add exch dup 0.830000 sub -5.009304 mul 0.596078 add exch dup 0.830000 sub -3.291828 mul 0.356863 add exch } if dup 0.912200 gt { exch pop exch pop exch pop dup 0.912200 sub 10.598822 mul 0.266667 add exch dup 0.912200 sub 8.560588 mul 0.184314 add exch dup 0.912200 sub 5.625529 mul 0.086275 add exch } if dup 0.960300 gt { exch pop exch pop exch pop dup 0.960300 sub 5.136567 mul 0.776471 add exch dup 0.960300 sub 8.791431 mul 0.596078 add exch dup 0.960300 sub 6.025589 mul 0.356863 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.980392 exch 0.945098 exch 0.596078 exch } if pop }
endstream
endobj

48 0 obj
  2880
endobj

49 0 obj
  << /Length 50 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.972549 exch 0.945098 exch 0.592157 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -4.901960 mul 0.972549 add exch dup 0.000000 sub -8.725490 mul 0.945098 add exch dup 0.000000 sub -5.882353 mul 0.592157 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub -5.098039 mul 0.776471 add exch dup 0.040000 sub -4.117647 mul 0.596078 add exch dup 0.040000 sub -2.705883 mul 0.356863 add exch } if dup 0.140000 gt { exch pop exch pop exch pop dup 0.140000 sub 5.154062 mul 0.266667 add exch dup 0.140000 sub 3.753502 mul 0.184314 add exch dup 0.140000 sub 2.128852 mul 0.086275 add exch } if dup 0.210000 gt { exch pop exch pop exch pop dup 0.210000 sub 4.313725 mul 0.627451 add exch dup 0.210000 sub 6.225491 mul 0.447059 add exch dup 0.210000 sub 4.460785 mul 0.235294 add exch } if dup 0.290000 gt { exch pop exch pop exch pop dup 0.290000 sub -1.288515 mul 0.972549 add exch dup 0.290000 sub -4.761903 mul 0.945098 add exch dup 0.290000 sub -3.473388 mul 0.592157 add exch } if dup 0.360000 gt { exch pop exch pop exch pop dup 0.360000 sub -3.455029 mul 0.882353 add exch dup 0.360000 sub -2.398715 mul 0.611765 add exch dup 0.360000 sub -1.474439 mul 0.349020 add exch } if dup 0.538200 gt { exch pop exch pop exch pop dup 0.538200 sub 9.996155 mul 0.266667 add exch dup 0.538200 sub 8.073818 mul 0.184314 add exch dup 0.538200 sub 5.305652 mul 0.086275 add exch } if dup 0.589200 gt { exch pop exch pop exch pop dup 0.589200 sub 3.844675 mul 0.776471 add exch dup 0.589200 sub 6.843522 mul 0.596078 add exch dup 0.589200 sub 4.613611 mul 0.356863 add exch } if dup 0.640200 gt { exch pop exch pop exch pop dup 0.640200 sub -2.895542 mul 0.972549 add exch dup 0.640200 sub -5.350457 mul 0.945098 add exch dup 0.640200 sub -3.965634 mul 0.592157 add exch } if dup 0.702500 gt { exch pop exch pop exch pop dup 0.702500 sub 3.163616 mul 0.792157 add exch dup 0.702500 sub 5.602237 mul 0.611765 add exch dup 0.702500 sub 4.218155 mul 0.345098 add exch } if dup 0.762000 gt { exch pop exch pop exch pop dup 0.762000 sub -2.998848 mul 0.980392 add exch dup 0.762000 sub -5.132644 mul 0.945098 add exch dup 0.762000 sub -3.517880 mul 0.596078 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub -6.201994 mul 0.776471 add exch dup 0.830000 sub -5.009304 mul 0.596078 add exch dup 0.830000 sub -3.291828 mul 0.356863 add exch } if dup 0.912200 gt { exch pop exch pop exch pop dup 0.912200 sub 10.598822 mul 0.266667 add exch dup 0.912200 sub 8.560588 mul 0.184314 add exch dup 0.912200 sub 5.625529 mul 0.086275 add exch } if dup 0.960300 gt { exch pop exch pop exch pop dup 0.960300 sub 5.136567 mul 0.776471 add exch dup 0.960300 sub 8.791431 mul 0.596078 add exch dup 0.960300 sub 6.025589 mul 0.356863 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.980392 exch 0.945098 exch 0.596078 exch } if pop }
endstream
endobj

50 0 obj
  2880
endobj

51 0 obj
  << /Length 52 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.972549 exch 0.945098 exch 0.592157 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -4.901960 mul 0.972549 add exch dup 0.000000 sub -8.725490 mul 0.945098 add exch dup 0.000000 sub -5.882353 mul 0.592157 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub 0.784314 mul 0.776471 add exch dup 0.040000 sub 1.396078 mul 0.596078 add exch dup 0.040000 sub 0.941177 mul 0.356863 add exch } if dup 0.290000 gt { exch pop exch pop exch pop dup 0.290000 sub -0.841381 mul 0.972549 add exch dup 0.290000 sub -3.109453 mul 0.945098 add exch dup 0.290000 sub -2.268072 mul 0.592157 add exch } if dup 0.397200 gt { exch pop exch pop exch pop dup 0.397200 sub -2.242459 mul 0.882353 add exch dup 0.397200 sub -1.558782 mul 0.611765 add exch dup 0.397200 sub -0.957147 mul 0.349020 add exch } if dup 0.540600 gt { exch pop exch pop exch pop dup 0.540600 sub 4.437987 mul 0.560784 add exch dup 0.540600 sub 4.276607 mul 0.388235 add exch dup 0.540600 sub 2.985555 mul 0.211765 add exch } if dup 0.589200 gt { exch pop exch pop exch pop dup 0.589200 sub 3.844675 mul 0.776471 add exch dup 0.589200 sub 6.843522 mul 0.596078 add exch dup 0.589200 sub 4.613611 mul 0.356863 add exch } if dup 0.640200 gt { exch pop exch pop exch pop dup 0.640200 sub -2.895542 mul 0.972549 add exch dup 0.640200 sub -5.350457 mul 0.945098 add exch dup 0.640200 sub -3.965634 mul 0.592157 add exch } if dup 0.702500 gt { exch pop exch pop exch pop dup 0.702500 sub 3.163616 mul 0.792157 add exch dup 0.702500 sub 5.602237 mul 0.611765 add exch dup 0.702500 sub 4.218155 mul 0.345098 add exch } if dup 0.762000 gt { exch pop exch pop exch pop dup 0.762000 sub -2.998848 mul 0.980392 add exch dup 0.762000 sub -5.132644 mul 0.945098 add exch dup 0.762000 sub -3.517880 mul 0.596078 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub -6.201994 mul 0.776471 add exch dup 0.830000 sub -5.009304 mul 0.596078 add exch dup 0.830000 sub -3.291828 mul 0.356863 add exch } if dup 0.912200 gt { exch pop exch pop exch pop dup 0.912200 sub 10.598822 mul 0.266667 add exch dup 0.912200 sub 8.560588 mul 0.184314 add exch dup 0.912200 sub 5.625529 mul 0.086275 add exch } if dup 0.960300 gt { exch pop exch pop exch pop dup 0.960300 sub 5.136567 mul 0.776471 add exch dup 0.960300 sub 8.791431 mul 0.596078 add exch dup 0.960300 sub 6.025589 mul 0.356863 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.980392 exch 0.945098 exch 0.596078 exch } if pop }
endstream
endobj

52 0 obj
  2489
endobj

53 0 obj
  << /Length 54 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.972549 exch 0.945098 exch 0.592157 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -4.901960 mul 0.972549 add exch dup 0.000000 sub -8.725490 mul 0.945098 add exch dup 0.000000 sub -5.882353 mul 0.592157 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub 0.784314 mul 0.776471 add exch dup 0.040000 sub 1.396078 mul 0.596078 add exch dup 0.040000 sub 0.941177 mul 0.356863 add exch } if dup 0.290000 gt { exch pop exch pop exch pop dup 0.290000 sub -0.841381 mul 0.972549 add exch dup 0.290000 sub -3.109453 mul 0.945098 add exch dup 0.290000 sub -2.268072 mul 0.592157 add exch } if dup 0.397200 gt { exch pop exch pop exch pop dup 0.397200 sub -2.242459 mul 0.882353 add exch dup 0.397200 sub -1.558782 mul 0.611765 add exch dup 0.397200 sub -0.957147 mul 0.349020 add exch } if dup 0.540600 gt { exch pop exch pop exch pop dup 0.540600 sub 4.437987 mul 0.560784 add exch dup 0.540600 sub 4.276607 mul 0.388235 add exch dup 0.540600 sub 2.985555 mul 0.211765 add exch } if dup 0.589200 gt { exch pop exch pop exch pop dup 0.589200 sub 3.844675 mul 0.776471 add exch dup 0.589200 sub 6.843522 mul 0.596078 add exch dup 0.589200 sub 4.613611 mul 0.356863 add exch } if dup 0.640200 gt { exch pop exch pop exch pop dup 0.640200 sub -2.895542 mul 0.972549 add exch dup 0.640200 sub -5.350457 mul 0.945098 add exch dup 0.640200 sub -3.965634 mul 0.592157 add exch } if dup 0.702500 gt { exch pop exch pop exch pop dup 0.702500 sub 3.163616 mul 0.792157 add exch dup 0.702500 sub 5.602237 mul 0.611765 add exch dup 0.702500 sub 4.218155 mul 0.345098 add exch } if dup 0.762000 gt { exch pop exch pop exch pop dup 0.762000 sub -2.998848 mul 0.980392 add exch dup 0.762000 sub -5.132644 mul 0.945098 add exch dup 0.762000 sub -3.517880 mul 0.596078 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub -6.201994 mul 0.776471 add exch dup 0.830000 sub -5.009304 mul 0.596078 add exch dup 0.830000 sub -3.291828 mul 0.356863 add exch } if dup 0.912200 gt { exch pop exch pop exch pop dup 0.912200 sub 10.598822 mul 0.266667 add exch dup 0.912200 sub 8.560588 mul 0.184314 add exch dup 0.912200 sub 5.625529 mul 0.086275 add exch } if dup 0.960300 gt { exch pop exch pop exch pop dup 0.960300 sub 5.136567 mul 0.776471 add exch dup 0.960300 sub 8.791431 mul 0.596078 add exch dup 0.960300 sub 6.025589 mul 0.356863 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.980392 exch 0.945098 exch 0.596078 exch } if pop }
endstream
endobj

54 0 obj
  2489
endobj

55 0 obj
  << /Length 56 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.972549 exch 0.945098 exch 0.592157 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -4.901960 mul 0.972549 add exch dup 0.000000 sub -8.725490 mul 0.945098 add exch dup 0.000000 sub -5.882353 mul 0.592157 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub 0.784314 mul 0.776471 add exch dup 0.040000 sub 1.396078 mul 0.596078 add exch dup 0.040000 sub 0.941177 mul 0.356863 add exch } if dup 0.290000 gt { exch pop exch pop exch pop dup 0.290000 sub -0.841381 mul 0.972549 add exch dup 0.290000 sub -3.109453 mul 0.945098 add exch dup 0.290000 sub -2.268072 mul 0.592157 add exch } if dup 0.397200 gt { exch pop exch pop exch pop dup 0.397200 sub -2.242459 mul 0.882353 add exch dup 0.397200 sub -1.558782 mul 0.611765 add exch dup 0.397200 sub -0.957147 mul 0.349020 add exch } if dup 0.540600 gt { exch pop exch pop exch pop dup 0.540600 sub 4.437987 mul 0.560784 add exch dup 0.540600 sub 4.276607 mul 0.388235 add exch dup 0.540600 sub 2.985555 mul 0.211765 add exch } if dup 0.589200 gt { exch pop exch pop exch pop dup 0.589200 sub 3.844675 mul 0.776471 add exch dup 0.589200 sub 6.843522 mul 0.596078 add exch dup 0.589200 sub 4.613611 mul 0.356863 add exch } if dup 0.640200 gt { exch pop exch pop exch pop dup 0.640200 sub -2.895542 mul 0.972549 add exch dup 0.640200 sub -5.350457 mul 0.945098 add exch dup 0.640200 sub -3.965634 mul 0.592157 add exch } if dup 0.702500 gt { exch pop exch pop exch pop dup 0.702500 sub 3.163616 mul 0.792157 add exch dup 0.702500 sub 5.602237 mul 0.611765 add exch dup 0.702500 sub 4.218155 mul 0.345098 add exch } if dup 0.762000 gt { exch pop exch pop exch pop dup 0.762000 sub -2.998848 mul 0.980392 add exch dup 0.762000 sub -5.132644 mul 0.945098 add exch dup 0.762000 sub -3.517880 mul 0.596078 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub -6.201994 mul 0.776471 add exch dup 0.830000 sub -5.009304 mul 0.596078 add exch dup 0.830000 sub -3.291828 mul 0.356863 add exch } if dup 0.912200 gt { exch pop exch pop exch pop dup 0.912200 sub 10.598822 mul 0.266667 add exch dup 0.912200 sub 8.560588 mul 0.184314 add exch dup 0.912200 sub 5.625529 mul 0.086275 add exch } if dup 0.960300 gt { exch pop exch pop exch pop dup 0.960300 sub 5.136567 mul 0.776471 add exch dup 0.960300 sub 8.791431 mul 0.596078 add exch dup 0.960300 sub 6.025589 mul 0.356863 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.980392 exch 0.945098 exch 0.596078 exch } if pop }
endstream
endobj

56 0 obj
  2489
endobj

57 0 obj
  << /Pattern << /P17 << /Matrix [ 90.852013 0.000000 -0.000000 90.852013 -0.038940 -32.852013 ]
                         /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 11 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 2
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P22 << /Matrix [ 0.000000 -57.978783 57.978783 0.000000 -57.978783 58.001221 ]
                         /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 9 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 2
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P28 << /Matrix [ 0.000000 -13.269464 13.269464 0.000000 -13.269464 38.435699 ]
                         /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 5 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 2
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P21 << /Matrix [ 0.000000 -57.986778 57.986778 0.000000 -57.986778 57.899780 ]
                         /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 7 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 2
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P1 << /Matrix [ 0.000000 -57.572716 57.572716 0.000000 -57.572716 57.882538 ]
                        /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                    /ColorSpace /DeviceRGB
                                    /Function 29 0 R
                                    /Domain [ 0.000000 1.000000 ]
                                    /ShadingType 2
                                    /Extend [ true true ]
                                 >>
                        /PatternType 2
                        /Type /Pattern
                     >>
                 /P20 << /Matrix [ 0.000000 -57.997215 57.997215 0.000000 -57.997215 57.963348 ]
                         /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 27 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 2
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P27 << /Matrix [ 0.000000 -57.774372 57.774372 0.000000 -57.774372 58.112610 ]
                         /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 13 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 2
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P16 << /Matrix [ 91.053368 0.000000 -0.000000 91.053368 -0.076294 -33.053368 ]
                         /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 15 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 2
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P23 << /Matrix [ 0.000000 -57.986778 57.986778 0.000000 -57.986778 57.899780 ]
                         /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 3 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 2
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P19 << /Matrix [ 0.000000 -57.829735 57.829735 0.000000 -57.829735 57.885925 ]
                         /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 1 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 2
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P25 << /Matrix [ 0.000000 -57.986778 57.986778 0.000000 -57.986778 57.899780 ]
                         /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 17 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 2
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P15 << /Matrix [ 91.001854 0.000000 -0.000000 91.001854 0.016235 -33.001854 ]
                         /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 19 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 2
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P13 << /Matrix [ 90.937637 0.000000 -0.000000 90.937637 0.046753 -32.937637 ]
                         /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 23 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 2
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P2 << /Matrix [ 0.000000 -56.853054 56.853054 0.000000 -56.853054 57.884003 ]
                        /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                    /ColorSpace /DeviceRGB
                                    /Function 21 0 R
                                    /Domain [ 0.000000 1.000000 ]
                                    /ShadingType 2
                                    /Extend [ true true ]
                                 >>
                        /PatternType 2
                        /Type /Pattern
                     >>
                 /P12 << /Matrix [ 91.160484 0.000000 -0.000000 91.160484 -0.076416 -33.160484 ]
                         /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 25 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 2
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P5 << /Matrix [ 0.000000 -57.572716 57.572716 0.000000 -57.572716 57.882538 ]
                        /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                    /ColorSpace /DeviceRGB
                                    /Function 31 0 R
                                    /Domain [ 0.000000 1.000000 ]
                                    /ShadingType 2
                                    /Extend [ true true ]
                                 >>
                        /PatternType 2
                        /Type /Pattern
                     >>
                 /P9 << /Matrix [ 0.000000 -57.572716 57.572716 0.000000 -57.572716 57.882538 ]
                        /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                    /ColorSpace /DeviceRGB
                                    /Function 33 0 R
                                    /Domain [ 0.000000 1.000000 ]
                                    /ShadingType 2
                                    /Extend [ true true ]
                                 >>
                        /PatternType 2
                        /Type /Pattern
                     >>
                 /P8 << /Matrix [ 0.000000 -57.572716 57.572716 0.000000 -57.572716 57.882538 ]
                        /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                    /ColorSpace /DeviceRGB
                                    /Function 37 0 R
                                    /Domain [ 0.000000 1.000000 ]
                                    /ShadingType 2
                                    /Extend [ true true ]
                                 >>
                        /PatternType 2
                        /Type /Pattern
                     >>
                 /P26 << /Matrix [ 0.000000 -57.978783 57.978783 0.000000 -57.978783 58.001221 ]
                         /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 35 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 2
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P11 << /Matrix [ 90.851585 0.000000 -0.000000 90.851585 0.011719 -32.851585 ]
                         /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 39 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 2
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P14 << /Matrix [ 91.038597 0.000000 -0.000000 91.038597 -0.004028 -33.038597 ]
                         /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 41 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 2
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P4 << /Matrix [ 0.000000 -57.572716 57.572716 0.000000 -57.572716 57.882538 ]
                        /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                    /ColorSpace /DeviceRGB
                                    /Function 45 0 R
                                    /Domain [ 0.000000 1.000000 ]
                                    /ShadingType 2
                                    /Extend [ true true ]
                                 >>
                        /PatternType 2
                        /Type /Pattern
                     >>
                 /P7 << /Matrix [ 0.000000 -58.310818 58.310818 0.000000 -58.310818 57.881012 ]
                        /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                    /ColorSpace /DeviceRGB
                                    /Function 43 0 R
                                    /Domain [ 0.000000 1.000000 ]
                                    /ShadingType 2
                                    /Extend [ true true ]
                                 >>
                        /PatternType 2
                        /Type /Pattern
                     >>
                 /P18 << /Matrix [ 90.962349 0.000000 -0.000000 90.962349 -0.004028 -32.962349 ]
                         /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 47 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 2
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P24 << /Matrix [ 0.000000 -57.978783 57.978783 0.000000 -57.978783 58.001221 ]
                         /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 49 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 2
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P3 << /Matrix [ 0.000000 -57.572716 57.572716 0.000000 -57.572716 57.882538 ]
                        /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                    /ColorSpace /DeviceRGB
                                    /Function 51 0 R
                                    /Domain [ 0.000000 1.000000 ]
                                    /ShadingType 2
                                    /Extend [ true true ]
                                 >>
                        /PatternType 2
                        /Type /Pattern
                     >>
                 /P6 << /Matrix [ 0.000000 -56.853054 56.853054 0.000000 -56.853054 57.884003 ]
                        /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                    /ColorSpace /DeviceRGB
                                    /Function 53 0 R
                                    /Domain [ 0.000000 1.000000 ]
                                    /ShadingType 2
                                    /Extend [ true true ]
                                 >>
                        /PatternType 2
                        /Type /Pattern
                     >>
                 /P10 << /Matrix [ 0.000000 -57.950703 57.950703 0.000000 -57.950703 57.711456 ]
                         /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 55 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 2
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
              >> >>
endobj

58 0 obj
  << /Length 59 0 R >>
stream
/DeviceRGB CS
/DeviceRGB cs
q
1.000000 0.000000 -0.000000 1.000000 0.000000 54.346069 cm
/Pattern cs
/P1 scn
30.987642 -32.283867 m
30.987642 -35.567757 l
30.518845 -35.567757 l
30.518845 -32.283867 l
30.987642 -32.283867 l
h
31.175163 -32.098858 m
30.331324 -32.098858 l
30.331324 -35.752766 l
31.175163 -35.752766 l
31.175163 -32.098858 l
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 54.299835 cm
/Pattern cs
/P2 scn
36.331959 -32.237633 m
36.331959 -35.521523 l
35.581882 -35.521523 l
33.237885 -32.561394 l
33.237885 -35.521523 l
32.769085 -35.521523 l
32.769085 -32.237633 l
33.566044 -32.237633 l
35.910038 -35.244011 l
35.910038 -32.237633 l
36.331959 -32.237633 l
h
35.675640 -32.052624 m
35.675640 -34.735237 l
33.659798 -32.145126 l
33.612923 -32.098873 l
32.628441 -32.098873 l
32.628441 -35.752781 l
33.472282 -35.752781 l
33.472282 -33.116421 l
35.488117 -35.660278 l
35.535000 -35.706532 l
36.566360 -35.706532 l
36.566360 -32.052624 l
35.675640 -32.052624 l
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 54.346069 cm
/Pattern cs
/P3 scn
41.113712 -32.283867 m
41.113712 -32.607628 l
39.801075 -32.607628 l
39.801075 -35.521507 l
39.332275 -35.521507 l
39.332275 -32.607628 l
37.972755 -32.607628 l
37.972755 -32.237614 l
41.113712 -32.237614 l
37.785236 -32.098858 m
37.785236 -32.792637 l
39.144753 -32.792637 l
39.144753 -35.752766 l
39.988590 -35.752766 l
39.988590 -32.792637 l
41.348110 -32.792637 l
41.348110 -32.098858 l
37.785236 -32.098858 l
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 54.346069 cm
/Pattern cs
/P4 scn
45.426666 -32.283867 m
45.426666 -32.607628 l
43.223312 -32.607628 l
43.223312 -33.717678 l
45.332909 -33.717678 l
45.332909 -34.041443 l
43.223312 -34.041443 l
43.223312 -35.243992 l
45.426666 -35.243992 l
45.426666 -35.567757 l
42.754509 -35.567757 l
42.754509 -32.283867 l
45.426666 -32.283867 l
h
45.614189 -32.098858 m
42.566990 -32.098858 l
42.566990 -35.752766 l
45.614189 -35.752766 l
45.614189 -35.058987 l
43.410831 -35.058987 l
43.410831 -34.180199 l
45.520428 -34.180199 l
45.520428 -33.532669 l
43.410831 -33.532669 l
43.410831 -32.792637 l
45.614189 -32.792637 l
45.614189 -32.098858 l
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 54.346069 cm
/Pattern cs
/P5 scn
49.036423 -32.283867 m
49.458344 -32.283867 49.786503 -32.376373 49.974022 -32.515129 c
50.161541 -32.653885 50.255302 -32.885143 50.255302 -33.255157 c
50.255302 -33.486420 50.208420 -33.671421 50.161541 -33.810177 c
50.114662 -33.948936 49.880264 -34.041443 49.505222 -34.133945 c
49.739624 -34.133945 49.927143 -34.226448 50.020901 -34.318954 c
50.114662 -34.411457 50.161541 -34.596462 50.161541 -34.735222 c
50.161541 -35.567757 l
49.692745 -35.567757 l
49.692745 -34.827728 l
49.692745 -34.596470 49.645863 -34.457710 49.505222 -34.365208 c
49.364586 -34.272705 49.177063 -34.226448 48.895782 -34.226448 c
47.489384 -34.226448 l
47.489384 -35.567757 l
47.020584 -35.567757 l
47.020584 -32.283867 l
49.036423 -32.283867 l
h
47.536266 -33.948936 m
48.895782 -33.948936 l
49.223942 -33.948936 49.458340 -33.902683 49.598980 -33.810177 c
49.739620 -33.717674 49.833382 -33.578918 49.833382 -33.301407 c
49.833382 -33.070148 49.786499 -32.885143 49.739620 -32.746387 c
49.645863 -32.607632 49.458344 -32.561378 49.130184 -32.561378 c
47.630024 -32.561378 l
47.630024 -33.948936 l
49.036423 -32.098858 m
46.879948 -32.098858 l
46.879948 -35.752766 l
47.723785 -35.752766 l
47.723785 -34.411457 l
48.942665 -34.411457 l
49.223946 -34.411457 49.364586 -34.457710 49.458344 -34.503963 c
49.505222 -34.503963 49.552101 -34.596462 49.552101 -34.781471 c
49.552101 -35.706512 l
50.395943 -35.706512 l
50.395943 -34.688969 l
50.395943 -34.457710 50.349060 -34.272701 50.208420 -34.133945 c
50.208420 -34.133945 50.161545 -34.087692 50.114666 -34.087692 c
50.208424 -34.041439 50.302181 -33.948936 50.349060 -33.856434 c
50.395943 -33.671425 50.442822 -33.486420 50.442822 -33.255157 c
50.442822 -32.838890 50.302181 -32.561378 50.067780 -32.376369 c
49.833382 -32.191364 49.505222 -32.098858 49.036423 -32.098858 c
h
47.723785 -32.792637 m
49.083302 -32.792637 l
49.505222 -32.792637 49.552101 -32.885139 49.552101 -32.885139 c
49.598980 -32.931393 49.645863 -33.070148 49.645863 -33.347664 c
49.645863 -33.532669 49.598984 -33.625175 49.505222 -33.671429 c
49.411465 -33.717682 49.270821 -33.763927 48.895782 -33.763927 c
47.723785 -33.763927 l
47.723785 -32.792637 l
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 54.299835 cm
/Pattern cs
/P6 scn
55.552734 -32.237633 m
55.552734 -35.521523 l
54.802658 -35.521523 l
52.458664 -32.561394 l
52.458664 -35.521523 l
51.989861 -35.521523 l
51.989861 -32.237633 l
52.739941 -32.237633 l
55.083939 -35.244011 l
55.083939 -32.237633 l
55.552734 -32.237633 l
h
54.896420 -32.052624 m
54.896420 -34.735237 l
52.880581 -32.145126 l
52.833698 -32.098873 l
51.849220 -32.098873 l
51.849220 -35.752781 l
52.693062 -35.752781 l
52.693062 -33.116421 l
54.708897 -35.660278 l
54.755775 -35.706532 l
55.787132 -35.706532 l
55.787132 -32.052624 l
54.896420 -32.052624 l
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 54.392334 cm
/Pattern cs
/P7 scn
59.396893 -32.330132 m
60.943924 -35.614021 l
60.428249 -35.614021 l
60.100094 -34.920242 l
57.990494 -34.920242 l
57.662331 -35.614021 l
57.146656 -35.614021 l
58.646812 -32.330132 l
59.396893 -32.330132 l
h
58.178009 -34.596478 m
60.006325 -34.596478 l
59.068729 -32.561394 l
58.178009 -34.596478 l
h
59.537529 -32.145123 m
58.693695 -32.145123 l
58.646812 -32.237625 l
57.146656 -35.521515 l
57.052895 -35.752777 l
57.943615 -35.752777 l
57.990494 -35.660271 l
58.271770 -35.058998 l
60.146965 -35.058998 l
60.428249 -35.660271 l
60.475128 -35.752777 l
61.365849 -35.752777 l
61.225208 -35.521515 l
59.678169 -32.237625 l
59.537529 -32.145123 l
h
58.459293 -34.457722 m
59.115612 -33.023911 l
59.771927 -34.457722 l
58.459293 -34.457722 l
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 54.346069 cm
/Pattern cs
/P8 scn
65.631920 -32.283867 m
65.631920 -32.607628 l
64.319290 -32.607628 l
64.319290 -35.521507 l
63.850491 -35.521507 l
63.850491 -32.607628 l
62.490967 -32.607628 l
62.490967 -32.237614 l
65.631920 -32.237614 l
62.303452 -32.098858 m
62.303452 -32.792637 l
63.662968 -32.792637 l
63.662968 -35.752766 l
64.506805 -35.752766 l
64.506805 -32.792637 l
65.866325 -32.792637 l
65.866325 -32.098858 l
62.303452 -32.098858 l
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 54.346069 cm
/Pattern cs
/P9 scn
67.741524 -32.283867 m
67.741524 -35.567757 l
67.272728 -35.567757 l
67.272728 -32.283867 l
67.741524 -32.283867 l
h
67.929054 -32.098858 m
67.085213 -32.098858 l
67.085213 -35.752766 l
67.929054 -35.752766 l
67.929054 -32.098858 l
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 54.299835 cm
/Pattern cs
/P10 scn
71.070007 -32.191380 m
71.632568 -32.191380 72.054474 -32.237629 72.335754 -32.376385 c
72.617035 -32.468891 72.757683 -32.792656 72.757683 -33.301430 c
72.757683 -33.486435 72.757683 -33.671448 72.757683 -33.902706 c
72.757683 -34.087715 72.757683 -34.272717 72.757683 -34.503979 c
72.757683 -34.920246 72.617035 -35.197758 72.429520 -35.336514 c
72.241997 -35.475269 71.866966 -35.567776 71.351288 -35.567776 c
71.163757 -35.567776 l
71.116875 -35.567776 71.116882 -35.567776 71.070007 -35.567776 c
71.023125 -35.567776 71.023125 -35.567776 70.976242 -35.567776 c
70.507446 -35.567776 70.132408 -35.521523 69.898010 -35.382767 c
69.663605 -35.290260 69.522972 -35.012753 69.476089 -34.596485 c
69.476089 -34.503983 69.476089 -34.365223 69.476089 -34.272720 c
69.476089 -34.180214 69.476089 -34.041462 69.476089 -33.948956 c
69.476089 -33.763950 l
69.476089 -33.301430 69.522964 -32.931412 69.663605 -32.653900 c
69.757362 -32.376389 70.179283 -32.237633 70.835602 -32.237633 c
71.070007 -32.237633 l
70.976242 -35.244015 m
71.445045 -35.244015 71.773193 -35.197762 71.960716 -35.105255 c
72.148232 -35.012753 72.241997 -34.781494 72.288879 -34.411476 c
72.288879 -34.318974 72.288879 -34.226471 72.288879 -34.133965 c
72.288879 -34.041462 72.288879 -33.948956 72.288879 -33.856453 c
72.288879 -33.763950 72.288879 -33.671444 72.288879 -33.578941 c
72.288879 -33.486435 72.288879 -33.393932 72.288879 -33.301430 c
72.288879 -32.885159 72.195122 -32.653900 72.007599 -32.607647 c
71.820076 -32.561398 71.491928 -32.515144 71.070007 -32.515144 c
70.929359 -32.515144 l
70.554321 -32.515144 70.319931 -32.561394 70.179291 -32.653900 c
70.038651 -32.746403 69.991760 -32.977665 69.991760 -33.301430 c
69.991760 -33.902706 l
69.991760 -34.411476 l
69.991760 -34.735241 70.038651 -34.920246 70.179291 -35.059002 c
70.273048 -35.197758 70.554329 -35.244015 70.976242 -35.244015 c
h
71.070007 -32.006374 m
70.882484 -32.006374 l
70.132408 -32.006374 69.663605 -32.191380 69.522964 -32.561394 c
69.382324 -32.885159 69.335449 -33.255173 69.335449 -33.717693 c
69.335449 -34.272720 l
69.335449 -34.365223 69.335449 -34.503983 69.335449 -34.596485 c
69.382324 -35.059006 69.522964 -35.382767 69.851120 -35.521523 c
70.132401 -35.660278 70.507446 -35.706532 70.976242 -35.706532 c
71.070007 -35.706532 l
71.116882 -35.706532 71.116875 -35.706532 71.163757 -35.706532 c
71.351288 -35.706532 l
71.913849 -35.706532 72.288887 -35.614029 72.523285 -35.429020 c
72.757683 -35.244011 72.898315 -34.920246 72.898315 -34.457729 c
72.898315 -34.272720 72.898315 -34.087711 72.898315 -33.856453 c
72.898315 -33.255177 l
72.898315 -32.653900 72.710793 -32.283886 72.335754 -32.145126 c
72.101357 -32.098877 71.632568 -32.006374 71.070007 -32.006374 c
h
70.132401 -33.301430 m
70.132401 -32.885159 70.226166 -32.792656 70.273048 -32.792656 c
70.319931 -32.746407 70.460564 -32.700153 70.929359 -32.700153 c
71.070007 -32.700153 l
71.585686 -32.700153 71.820076 -32.746407 71.960716 -32.792656 c
72.054474 -32.838909 72.101357 -33.023914 72.101357 -33.347679 c
72.101357 -33.902706 l
72.101357 -33.995213 72.101357 -34.087711 72.101357 -34.180214 c
72.101357 -34.272720 72.101357 -34.365223 72.101357 -34.457729 c
72.101357 -34.642735 72.054482 -34.966499 71.913841 -35.012753 c
71.773201 -35.059006 71.538803 -35.105255 70.976242 -35.105255 c
70.460564 -35.105255 70.319931 -35.012753 70.273048 -35.012753 c
70.226166 -34.966499 70.132401 -34.873993 70.132401 -34.503979 c
70.132401 -33.301430 l
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 18.824554 cm
0.000000 0.000000 0.000000 scn
30.987642 3.237648 m
30.987642 -0.046242 l
30.518845 -0.046242 l
30.518845 3.237648 l
30.987642 3.237648 l
h
36.331959 3.237648 m
36.331959 -0.046242 l
35.581882 -0.046242 l
33.237885 2.913887 l
33.237885 -0.046242 l
32.769085 -0.046242 l
32.769085 3.237648 l
33.566044 3.237648 l
35.910038 0.231270 l
35.910038 3.237648 l
36.331959 3.237648 l
h
39.801075 2.913887 m
39.801075 0.000008 l
39.332275 0.000008 l
39.332275 2.913887 l
37.972755 2.913887 l
37.972755 3.283901 l
41.113712 3.283901 l
41.113712 2.913887 l
39.801075 2.913887 l
h
43.223312 2.913887 m
43.223312 1.803837 l
45.332909 1.803837 l
45.332909 1.480072 l
43.223312 1.480072 l
43.223312 0.277523 l
45.426666 0.277523 l
45.426666 -0.046242 l
42.754509 -0.046242 l
42.754509 3.237648 l
45.426666 3.237648 l
45.426666 2.913887 l
43.223312 2.913887 l
h
47.067467 -0.046242 m
47.067467 3.237644 l
49.036423 3.237648 l
49.458344 3.237648 49.786503 3.145142 49.974022 3.006386 c
50.161541 2.867630 50.255302 2.636372 50.255302 2.266357 c
50.255302 2.035095 50.208420 1.850094 50.161541 1.711338 c
50.114662 1.572578 49.880264 1.480072 49.505222 1.387569 c
49.739624 1.387569 49.927143 1.295067 50.020901 1.202560 c
50.114662 1.110058 50.161541 0.925053 50.161541 0.786293 c
50.161541 -0.046242 l
49.692745 -0.046242 l
49.692745 0.693787 l
49.692745 0.925045 49.645863 1.063805 49.505222 1.156307 c
49.364586 1.248810 49.177063 1.295067 48.895782 1.295067 c
47.489384 1.295067 l
47.489384 -0.046242 l
47.067467 -0.046242 l
h
47.536266 1.572578 m
48.895782 1.572578 l
49.223942 1.572578 49.458340 1.618832 49.598980 1.711338 c
49.739620 1.803841 49.833382 1.942596 49.833382 2.220108 c
49.833382 2.451366 49.786499 2.636372 49.739620 2.775127 c
49.645863 2.913883 49.458344 2.960136 49.130184 2.960136 c
47.630024 2.960136 l
47.630024 1.572578 l
47.536266 1.572578 l
h
55.552734 3.237648 m
55.552734 -0.046242 l
54.802658 -0.046242 l
52.458664 2.913887 l
52.458664 -0.046242 l
51.989861 -0.046242 l
51.989861 3.237648 l
52.739941 3.237648 l
55.083939 0.231270 l
55.083939 3.237648 l
55.552734 3.237648 l
h
60.146965 0.647537 m
58.037369 0.647537 l
57.709213 -0.046242 l
57.193531 -0.046242 l
58.693695 3.237644 l
59.350010 3.237644 l
60.897053 -0.046242 l
60.381367 -0.046242 l
60.146965 0.647537 l
h
60.006325 0.971302 m
59.068729 3.006386 l
58.131130 0.971302 l
60.006325 0.971302 l
h
64.319290 2.913887 m
64.319290 0.000008 l
63.850491 0.000008 l
63.850491 2.913887 l
62.490967 2.913887 l
62.490967 3.283901 l
65.631920 3.283901 l
65.631920 2.913887 l
64.319290 2.913887 l
h
67.741524 3.237648 m
67.741524 -0.046242 l
67.272728 -0.046242 l
67.272728 3.237648 l
67.741524 3.237648 l
h
69.522957 1.526325 m
69.522957 1.711330 l
69.522957 2.173851 69.569839 2.543869 69.710480 2.821381 c
69.804237 3.098892 70.226158 3.237644 70.882477 3.237644 c
71.070007 3.237648 l
71.632568 3.237648 72.054474 3.191395 72.335754 3.052639 c
72.617035 2.960136 72.757683 2.636375 72.757683 2.127602 c
72.757683 1.942596 72.757683 1.757584 72.757683 1.526325 c
72.757683 1.341316 72.757683 1.156307 72.757683 0.925049 c
72.757683 0.508781 72.617035 0.231266 72.429520 0.092510 c
72.241997 -0.046246 71.866959 -0.138748 71.351280 -0.138748 c
71.163757 -0.138748 l
71.116875 -0.138748 71.116875 -0.138748 71.070000 -0.138748 c
71.023117 -0.138748 71.023117 -0.138748 70.976234 -0.138748 c
70.507439 -0.138748 70.132401 -0.092495 69.898003 0.046261 c
69.663597 0.138767 69.522964 0.416279 69.476082 0.832546 c
69.476082 0.925049 69.476082 1.063805 69.476082 1.156307 c
69.522964 1.341316 69.522957 1.433819 69.522957 1.526325 c
h
69.991760 1.572575 m
69.991760 1.063805 l
69.991760 0.740040 70.038651 0.555035 70.179291 0.416279 c
70.319931 0.323772 70.554321 0.277523 70.976234 0.277523 c
71.445038 0.277523 71.773193 0.323769 71.960716 0.416275 c
72.148232 0.508778 72.241997 0.740040 72.288879 1.110058 c
72.288879 1.202560 72.288879 1.295063 72.288879 1.387566 c
72.288879 1.480068 72.288879 1.572578 72.288879 1.665081 c
72.288879 1.757587 72.288879 1.850090 72.288879 1.942596 c
72.288879 2.035099 72.288879 2.127598 72.288879 2.220104 c
72.288879 2.636372 72.195122 2.867634 72.007599 2.913887 c
71.820076 2.960136 71.491920 3.006386 71.070000 3.006386 c
70.929352 3.006386 l
70.554314 3.006386 70.319916 2.960136 70.179283 2.867634 c
70.038643 2.775127 69.991760 2.543865 69.991760 2.220104 c
69.991760 1.572575 l
h
78.055115 3.237644 m
78.055115 -0.046242 l
77.305031 -0.046242 l
74.961037 2.913887 l
74.961037 -0.046242 l
74.492241 -0.046242 l
74.492241 3.237644 l
75.242317 3.237644 l
77.586311 0.231266 l
77.586311 3.237644 l
78.055115 3.237644 l
h
82.649338 0.647537 m
80.539749 0.647537 l
80.211586 -0.046242 l
79.695900 -0.046242 l
81.196068 3.237644 l
81.852379 3.237644 l
83.399429 -0.046242 l
82.883743 -0.046242 l
82.649338 0.647537 l
h
82.508705 0.971302 m
81.571098 3.006386 l
80.633507 0.971302 l
82.508705 0.971302 l
h
85.602783 3.237644 m
85.602783 0.277523 l
87.712379 0.277523 l
87.712379 -0.046242 l
85.133987 -0.046242 l
85.133987 3.237644 l
85.602783 3.237644 l
h
50.583462 37.880390 m
52.880581 38.527916 56.302818 39.036690 61.037693 38.897934 c
65.069366 38.666676 69.007278 37.510372 72.710800 35.799049 c
61.881527 35.799049 l
60.990807 36.955349 l
47.864426 36.955349 l
50.583462 37.880390 l
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 54.392334 cm
/Pattern cs
/P11 scn
59.725052 3.376406 m
60.146973 3.376406 60.615772 3.376406 61.037693 3.376406 c
65.069366 3.145146 69.007278 1.988846 72.710800 0.277523 c
61.881527 0.277523 l
60.990807 1.433822 l
47.864426 1.433822 l
50.536579 2.312610 l
52.693054 2.913886 55.646500 3.376406 59.725052 3.376406 c
h
59.725052 3.607666 m
56.068417 3.607666 52.974335 3.237650 50.536579 2.543870 c
47.864426 1.665082 l
46.364269 1.156311 l
60.897053 1.156311 l
61.694008 0.092515 l
61.787766 0.000011 l
73.929680 0.000011 l
72.898308 0.462531 l
68.913513 2.266359 64.928726 3.330154 61.131447 3.561414 c
60.615768 3.607666 60.146973 3.607666 59.725052 3.607666 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 54.392334 cm
0.000000 0.000000 0.000000 scn
43.129551 -0.740021 m
74.867271 -0.740021 l
79.883430 -4.347676 l
64.928719 -4.347676 l
64.413048 -3.330132 l
53.396259 -3.330132 l
54.005699 -2.035076 l
41.535633 -1.942573 l
43.129551 -0.740021 l
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 53.883575 cm
/Pattern cs
/P12 scn
74.867271 -0.231263 m
79.883430 -3.838918 l
64.928719 -3.838918 l
64.459923 -2.821373 l
53.443142 -2.821373 l
54.052578 -1.526318 l
41.535633 -1.433815 l
43.176430 -0.231262 l
74.867271 -0.231263 l
h
74.961037 -0.000002 m
43.082672 -0.000002 l
43.035786 -0.046254 l
41.394993 -1.248806 l
40.785553 -1.711326 l
41.535633 -1.711326 l
53.630661 -1.803830 l
53.208740 -2.728869 l
53.021221 -3.098886 l
64.272408 -3.098886 l
64.694321 -3.977674 l
64.741203 -4.116429 l
80.633507 -4.116429 l
79.977196 -3.653909 l
74.961037 -0.046254 l
74.961037 -0.000002 l
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 54.346100 cm
0.000000 0.000000 0.000000 scn
36.753876 -5.596498 m
81.196068 -5.596498 l
84.290138 -9.204153 l
67.366478 -9.250404 l
66.944557 -8.140357 l
50.864742 -8.186610 l
51.333538 -6.660294 l
35.722519 -6.706546 l
36.753876 -5.596498 l
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 53.791077 cm
/Pattern cs
/P13 scn
81.196068 -5.041475 m
84.290138 -8.649130 l
67.319595 -8.695381 l
66.897690 -7.539082 l
50.817863 -7.585333 l
51.286659 -6.059017 l
35.722519 -6.151523 l
36.753876 -5.041475 l
81.196068 -5.041475 l
h
81.289825 -4.810214 m
36.660118 -4.810214 l
36.566357 -4.902718 l
35.535000 -6.012766 l
35.113083 -6.429034 l
35.722519 -6.429034 l
51.005379 -6.382782 l
50.630341 -7.585333 l
50.536579 -7.909098 l
50.864742 -7.909098 l
66.757042 -7.862846 l
67.085197 -8.834138 l
67.132088 -9.019146 l
67.319595 -9.019146 l
84.290138 -8.972893 l
84.852699 -8.972893 l
84.477669 -8.556626 l
81.383591 -4.948970 l
81.289825 -4.810214 l
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 54.346100 cm
0.000000 0.000000 0.000000 scn
32.815964 -10.314200 m
85.087097 -10.314200 l
87.243576 -13.921854 l
68.913513 -13.968109 l
68.866646 -12.904314 l
48.942661 -12.904314 l
49.458344 -11.563005 l
32.159641 -11.609256 l
32.815964 -10.314200 l
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 53.837311 cm
/Pattern cs
/P14 scn
85.087097 -9.805411 m
87.243576 -13.413065 l
68.913513 -13.459320 l
68.819763 -12.395525 l
48.895782 -12.395525 l
49.458344 -11.054216 l
32.159641 -11.100467 l
32.815964 -9.805411 l
85.087097 -9.805411 l
h
85.227737 -9.527901 m
32.675320 -9.527901 l
32.581562 -9.666656 l
31.737722 -11.331728 l
32.159641 -11.331728 l
49.083302 -11.285477 l
48.661381 -12.256767 l
48.520741 -12.626785 l
68.585358 -12.626785 l
68.632240 -13.459320 l
68.632240 -13.690580 l
68.866646 -13.690580 l
87.196693 -13.644325 l
87.665497 -13.644325 l
87.431091 -13.274311 l
85.274620 -9.666656 l
85.227737 -9.527901 l
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 54.762360 cm
0.000000 0.000000 0.000000 scn
50.583462 -53.467297 m
52.880581 -54.114826 56.302818 -54.623596 61.037693 -54.484840 c
65.069366 -54.253582 69.007278 -53.097286 72.710800 -51.385960 c
61.881527 -51.385960 l
60.990807 -52.542259 l
47.864426 -52.542259 l
50.583462 -53.467297 l
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 54.392334 cm
/Pattern cs
/P15 scn
61.928410 -51.062191 m
72.757683 -51.062191 l
69.054169 -52.773514 65.116241 -53.883560 61.084568 -54.161072 c
60.615768 -54.161072 60.193848 -54.161072 59.771931 -54.161072 c
55.693375 -54.161072 52.739941 -53.698547 50.630341 -53.097271 c
47.958183 -52.218491 l
61.084568 -52.218491 l
61.928410 -51.062191 l
h
61.787766 -50.784672 m
61.694008 -50.877182 l
60.897053 -51.940971 l
46.364269 -51.940971 l
47.864426 -52.449749 l
50.536579 -53.328537 l
53.021217 -54.022316 56.115295 -54.392330 59.771931 -54.392330 c
60.193848 -54.392330 60.662647 -54.392330 61.084568 -54.392330 c
64.928726 -54.161072 68.866646 -53.097275 72.851440 -51.293449 c
73.882797 -50.830929 l
61.787766 -50.830929 l
61.787766 -50.784672 l
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 54.392334 cm
0.000000 0.000000 0.000000 scn
43.129551 -50.044643 m
74.867271 -50.044643 l
79.883430 -46.436989 l
64.928719 -46.436989 l
64.413048 -47.454533 l
53.396259 -47.454533 l
54.005699 -48.749592 l
41.535633 -48.842091 l
43.129551 -50.044643 l
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 53.883575 cm
/Pattern cs
/P16 scn
79.883430 -45.928230 m
74.867271 -49.535885 l
43.176430 -49.535885 l
41.535633 -48.333332 l
54.005699 -48.240833 l
53.396259 -46.945774 l
64.413048 -46.945774 l
64.881844 -45.928230 l
79.883430 -45.928230 l
h
80.680389 -45.696972 m
64.788086 -45.696972 l
64.741203 -45.835724 l
64.319290 -46.714516 l
53.068096 -46.714516 l
53.255615 -47.084530 l
53.677536 -48.009575 l
41.535633 -48.102074 l
40.785553 -48.102074 l
41.394993 -48.564594 l
43.035786 -49.767143 l
43.082672 -49.813393 l
74.961037 -49.813393 l
75.007912 -49.767143 l
80.024071 -46.159489 l
80.680389 -45.696972 l
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 54.346100 cm
0.000000 0.000000 0.000000 scn
36.753876 -45.095699 m
81.196068 -45.095699 l
84.290138 -41.488041 l
67.366478 -41.441792 l
66.944557 -42.551842 l
50.864742 -42.505585 l
51.333538 -44.031902 l
35.722519 -43.985649 l
36.753876 -45.095699 l
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 53.791077 cm
/Pattern cs
/P17 scn
67.366478 -40.886768 m
84.337021 -40.933018 l
81.242943 -44.540676 l
36.753876 -44.540676 l
35.722519 -43.430626 l
51.333538 -43.476879 l
50.864742 -41.950562 l
66.944557 -41.996819 l
67.366478 -40.886768 l
h
67.178963 -40.609257 m
67.132088 -40.794262 l
66.803917 -41.765556 l
50.911617 -41.719303 l
50.583462 -41.719303 l
50.677223 -42.043068 l
51.052265 -43.245617 l
35.769394 -43.199368 l
35.159958 -43.199368 l
35.581879 -43.615635 l
36.613235 -44.725685 l
36.706997 -44.818188 l
81.383591 -44.818188 l
81.477348 -44.725685 l
84.571426 -41.118027 l
84.946465 -40.701759 l
84.383896 -40.701759 l
67.413361 -40.655510 l
67.178963 -40.609257 l
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 54.346100 cm
0.000000 0.000000 0.000000 scn
32.815964 -40.377998 m
85.087097 -40.377998 l
87.243576 -36.770340 l
68.913513 -36.724087 l
68.866646 -37.787884 l
48.942661 -37.787884 l
49.458344 -39.129192 l
32.159641 -39.082943 l
32.815964 -40.377998 l
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 53.837311 cm
/Pattern cs
/P18 scn
68.913513 -36.215298 m
87.243576 -36.261551 l
85.087097 -39.869209 l
32.815964 -39.869209 l
32.159641 -38.574154 l
49.458344 -38.620403 l
48.895782 -37.279095 l
68.819763 -37.279095 l
68.913513 -36.215298 l
h
68.679115 -35.984039 m
68.679115 -36.215298 l
68.632248 -37.047836 l
48.567627 -37.047836 l
49.130184 -38.342892 l
31.737722 -38.342892 l
32.581562 -40.007961 l
32.675323 -40.146717 l
85.227745 -40.146717 l
85.321503 -40.007961 l
87.477982 -36.400311 l
87.712379 -36.030289 l
87.243576 -36.030289 l
68.913521 -35.984039 l
68.679115 -35.984039 l
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 29.370026 cm
0.000000 0.000000 0.000000 scn
90.900230 4.948954 m
90.759590 5.550230 90.525185 6.105253 90.197021 6.567772 c
89.962624 6.891537 89.681351 7.169048 89.353188 7.446560 c
89.306305 7.539064 89.259422 7.585316 89.212547 7.677820 c
88.884384 8.140341 88.415581 8.556608 87.853027 8.880373 c
86.915428 9.435396 85.837189 9.666656 84.430786 9.666656 c
79.883438 9.666656 l
78.945839 9.666656 78.148880 9.620405 77.492561 9.481649 c
76.742477 9.342894 76.039276 9.065380 75.476715 8.695364 c
75.336082 8.602859 75.148560 8.464106 75.007919 8.325350 c
75.101685 8.556608 l
73.648399 8.556608 l
74.070312 9.666656 l
68.022812 9.666656 l
63.241055 -3.145145 l
61.975300 -1.433821 l
62.209698 -1.341318 62.397213 -1.248816 62.584732 -1.110060 c
63.053532 -0.832546 63.428574 -0.416279 63.709854 0.046240 c
63.991135 0.416256 64.225533 0.878777 64.413055 1.433802 c
64.788094 2.358841 l
65.163139 3.330132 65.256889 4.255173 65.069366 5.133961 c
64.881851 6.105251 64.319290 6.891537 63.522331 7.539064 c
63.194168 8.047836 62.772259 8.510357 62.209698 8.880373 c
61.365860 9.435396 60.287609 9.712910 58.974972 9.712910 c
50.442822 9.712910 l
49.974026 8.556608 l
48.614506 8.556608 l
49.036427 9.666656 l
34.456760 9.666656 l
30.378204 -1.295067 l
30.237564 -0.786295 29.862526 -0.185019 29.159327 0.323753 c
28.971807 0.647516 28.690527 1.017534 28.268608 1.341299 c
28.549887 1.665062 28.831169 2.035076 29.018688 2.451344 c
30.518847 5.503977 l
30.518847 5.596481 l
30.565725 5.827742 30.987646 7.631569 29.956287 8.926624 c
29.862528 9.111631 29.675007 9.389145 29.299967 9.712910 c
29.206207 9.759161 29.159328 9.851665 29.065569 9.897917 c
29.018688 9.944170 28.971807 9.990419 28.924927 10.082924 c
28.831167 10.267933 28.643646 10.545444 28.268608 10.822958 c
27.846687 11.192972 27.096609 11.609240 25.830851 11.655493 c
11.579347 11.979258 l
13.501426 5.180214 l
6.188154 -6.614048 l
0.000000 -15.540680 l
2.156478 -15.031910 l
1.031359 -16.650730 l
19.970858 -12.164284 l
20.064617 -12.164284 21.752296 -11.748016 23.674374 -10.869228 c
26.393412 -9.666679 28.127968 -8.232864 28.878046 -6.567795 c
29.628126 -4.763966 l
30.518847 -4.763966 l
30.096926 -5.874012 l
45.332909 -5.874012 l
45.754829 -4.763966 l
46.458031 -4.763966 l
46.036110 -5.874012 l
52.083622 -5.874012 l
53.443142 -2.173853 l
53.490021 -2.081348 53.490021 -2.035099 53.536900 -1.988846 c
53.536900 -1.988846 53.583782 -1.988846 53.630661 -1.988846 c
53.818180 -1.942595 54.052578 -1.942593 54.380737 -1.942593 c
55.740261 -1.942593 l
57.849857 -4.763966 l
58.037373 -4.763966 l
58.881214 -5.874012 l
69.663605 -5.874012 l
71.398163 -1.248814 l
71.632561 -2.220104 72.148239 -3.052643 72.945198 -3.653919 c
73.320244 -4.208942 73.789040 -4.717712 74.445358 -5.087727 c
75.382957 -5.642750 76.508080 -5.920269 77.867599 -5.920269 c
82.414948 -5.920269 l
83.352547 -5.920269 84.149513 -5.874012 84.805832 -5.735256 c
85.602791 -5.596500 86.259109 -5.318985 86.868546 -4.902718 c
87.431107 -4.532703 87.946785 -3.977684 88.368698 -3.376408 c
88.696861 -2.821383 89.071907 -2.173855 89.400063 -1.341320 c
90.431427 1.248793 l
90.947105 2.636353 91.134628 3.838907 90.900230 4.948954 c
h
45.942348 0.231251 m
47.114346 3.515141 l
48.098824 3.515141 l
46.458031 -0.878799 l
45.754829 -0.878799 l
46.176750 0.231251 l
45.942348 0.231251 l
h
18.470701 -2.081350 m
22.314856 -2.035099 l
21.705418 -3.376408 l
21.658537 -3.468910 21.049097 -4.440197 19.455179 -4.717712 c
16.361103 -5.272739 l
18.470701 -2.081350 l
h
82.883751 1.618809 m
82.696228 1.063786 82.508713 0.786276 82.414948 0.647520 c
82.321190 0.555016 82.274315 0.462511 82.180550 0.416260 c
82.086792 0.370007 81.993034 0.323753 81.852394 0.323753 c
81.571114 0.277500 81.242950 0.277500 80.821037 0.277500 c
78.477036 0.277500 l
79.273994 2.173834 l
79.273994 2.220085 l
79.461517 2.682606 79.602150 2.960117 79.695915 3.098873 c
79.789673 3.237629 79.836555 3.283882 79.930313 3.376387 c
80.024078 3.422638 80.164719 3.468887 80.305359 3.515141 c
80.539757 3.561392 80.914795 3.561394 81.289833 3.561394 c
83.633835 3.561394 l
82.883751 1.618809 l
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 32.838898 cm
/Pattern cs
/P19 scn
28.315491 -5.087700 m
28.315491 -5.087700 28.971807 -3.237619 26.627810 -2.405085 c
26.627810 -2.405085 25.502693 -1.896313 23.908773 -1.665052 c
23.908773 -1.665052 26.065252 -1.387541 27.002851 0.555042 c
28.456127 3.515169 l
28.456127 3.515169 28.831167 5.133989 28.034208 6.105282 c
28.034208 6.105282 27.612288 7.169077 25.690210 7.261581 c
12.751346 7.585346 l
14.439025 1.618837 l
6.844472 -10.637939 l
2.062718 -17.575741 l
18.611340 -13.644318 l
18.611340 -13.644318 25.315174 -12.025501 26.909092 -8.602852 c
28.315491 -5.087700 l
h
21.049097 3.931438 m
23.439976 3.838934 l
24.518213 3.746429 23.861895 2.775139 23.861895 2.775139 c
23.861895 2.775139 23.346214 1.757593 22.924294 1.156317 c
22.502375 0.555042 21.330378 0.323782 21.330378 0.323782 c
18.705099 0.231277 l
21.049097 3.931438 l
h
19.502060 -9.111626 m
12.235666 -10.360428 l
16.829901 -3.515131 l
22.221096 -3.422630 l
22.221096 -3.422630 24.377573 -3.098864 23.627493 -4.717684 c
22.455496 -7.261543 l
22.455496 -7.261543 21.752296 -8.741608 19.502060 -9.111626 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 32.006378 cm
/Pattern cs
/P20 scn
1.265759 -17.251991 m
6.563193 -9.574162 l
14.063986 2.497608 l
12.282546 8.741627 l
25.690212 8.417866 l
27.565411 8.325361 28.174852 7.354069 28.315491 7.076557 c
29.206211 6.012762 28.831171 4.301437 28.784290 4.208933 c
28.737408 4.162680 l
27.284132 1.202555 l
26.768452 0.185011 25.971493 -0.416267 25.315174 -0.740030 c
26.205893 -0.971291 26.721573 -1.202549 26.768452 -1.248802 c
29.346849 -2.173841 28.643650 -4.347685 28.643650 -4.347685 c
27.190371 -7.816586 l
25.596453 -11.424240 18.939499 -13.043060 18.658218 -13.089314 c
1.265759 -17.251991 l
h
13.220145 8.001596 m
14.814064 2.358854 l
7.172633 -9.944180 l
2.859677 -16.141941 l
18.517580 -12.395535 l
18.564461 -12.395535 25.080774 -10.776711 26.580933 -7.539070 c
27.987329 -4.116425 l
28.034208 -3.977669 28.456129 -2.590111 26.534052 -1.896330 c
26.487171 -1.896330 25.408936 -1.387560 23.908775 -1.202551 c
21.189737 -0.878786 l
23.908775 -0.508770 l
23.908775 -0.508770 25.877733 -0.231256 26.721573 1.480066 c
28.127972 4.393940 l
28.174850 4.625200 28.409250 5.920256 27.752930 6.660288 c
27.706051 6.752792 l
27.706051 6.799044 27.284130 7.631582 25.690212 7.724087 c
13.220145 8.001596 l
h
11.485588 -9.990429 m
16.642384 -2.312599 l
22.221094 -2.220093 l
22.221094 -2.220093 22.408615 -2.173841 22.643015 -2.173841 c
23.299335 -2.173841 23.768135 -2.358849 24.002535 -2.728865 c
24.190054 -3.052628 24.190054 -3.468899 23.955654 -4.023922 c
22.783655 -6.567783 l
22.736776 -6.660286 21.939816 -8.232857 19.548939 -8.602871 c
11.485588 -9.990429 l
h
17.017422 -3.006378 m
12.938867 -9.065388 l
19.408297 -7.955341 l
21.471014 -7.631577 22.127337 -6.336521 22.127337 -6.290268 c
23.299335 -3.746410 l
23.439976 -3.468897 23.486853 -3.237637 23.393093 -3.145132 c
23.299334 -3.006376 23.018055 -2.913872 22.643015 -2.913872 c
22.455496 -2.913872 22.267977 -2.913872 22.267977 -2.913872 c
17.017422 -3.006378 l
h
18.048782 0.693781 m
20.861580 5.133972 l
23.439976 5.041468 l
24.002535 4.995216 24.236933 4.763956 24.330692 4.532698 c
24.565092 4.070177 24.236935 3.468899 24.190054 3.422647 c
24.190054 3.422647 23.674374 2.405106 23.252455 1.803829 c
22.736776 1.156301 21.564777 0.878790 21.424137 0.832537 c
18.048782 0.693781 l
h
21.236616 4.440193 m
19.361418 1.433813 l
21.330379 1.526316 l
21.564779 1.572569 22.361734 1.803829 22.689894 2.220097 c
23.111813 2.775122 23.580614 3.746414 23.580614 3.792665 c
23.674374 3.931421 23.768135 4.162680 23.721256 4.255184 c
23.721256 4.301437 23.627495 4.347689 23.439976 4.347689 c
21.236616 4.440193 l
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 45.419464 cm
/Pattern cs
/P21 scn
30.331326 -19.888363 m
43.551472 -19.888363 l
44.723469 -16.743227 l
35.488117 -16.743227 l
36.003799 -15.355667 l
36.050678 -15.216911 36.097561 -15.124409 36.191319 -15.078156 c
36.331959 -14.985653 36.519478 -14.939400 36.706997 -14.893148 c
36.941399 -14.846895 37.175797 -14.800644 37.410194 -14.800644 c
37.691475 -14.800644 38.019638 -14.800644 38.300915 -14.800644 c
43.738987 -14.800644 l
44.864109 -11.655508 l
37.972759 -11.655508 l
37.785240 -11.655508 37.597713 -11.655508 37.410194 -11.655508 c
37.832115 -10.452957 l
46.364269 -10.452957 l
47.536266 -7.307821 l
35.019321 -7.307821 l
30.331326 -19.888363 l
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 44.725677 cm
/Pattern cs
/P22 scn
43.785873 -19.564590 m
29.815647 -19.564590 l
34.738041 -6.290272 l
48.051949 -6.290272 l
46.598671 -10.129185 l
38.066517 -10.129185 l
37.878994 -10.591705 l
45.379787 -10.591705 l
43.973389 -14.430622 l
38.347797 -14.430622 l
38.066517 -14.430622 37.785240 -14.430622 37.457077 -14.430622 c
37.222679 -14.430622 36.988281 -14.476871 36.800762 -14.523125 c
36.660122 -14.569376 36.519482 -14.615629 36.425720 -14.661880 c
36.425720 -14.661880 36.378841 -14.708132 36.378841 -14.754385 c
36.050678 -15.679424 l
45.286030 -15.679424 l
43.785873 -19.564590 l
h
30.847004 -18.870811 m
43.317074 -18.870811 l
44.254673 -16.419458 l
34.972443 -16.419458 l
35.675640 -14.569378 l
35.769398 -14.384371 35.863159 -14.245613 36.003799 -14.153109 c
36.191319 -14.060606 36.378841 -13.968102 36.613239 -13.921848 c
36.847641 -13.875597 37.128918 -13.829344 37.410198 -13.829344 c
37.738358 -13.829344 38.019638 -13.829344 38.300915 -13.829344 c
43.457710 -13.829344 l
44.348431 -11.377989 l
37.972759 -11.377989 l
37.785240 -11.377989 37.597717 -11.377989 37.457077 -11.377989 c
36.941399 -11.424242 l
37.644596 -9.527910 l
46.176750 -9.527910 l
47.114346 -7.076553 l
35.253723 -7.076553 l
30.847004 -18.870811 l
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 45.419464 cm
/Pattern cs
/P23 scn
61.553368 -8.001600 m
60.850170 -7.539080 59.959446 -7.307821 58.834328 -7.307821 c
50.958504 -7.307821 l
46.270504 -19.888363 l
50.255302 -19.888363 l
51.380421 -16.835730 l
51.474178 -16.650721 51.521061 -16.465712 51.614822 -16.373209 c
51.661701 -16.280704 51.755463 -16.188202 51.849220 -16.141951 c
51.942982 -16.095697 52.130501 -16.049448 52.271141 -16.003197 c
52.505543 -15.956944 52.786819 -15.956944 53.114979 -15.956944 c
55.177700 -15.956944 l
58.084255 -19.888363 l
62.115925 -19.888363 l
59.115612 -15.818188 l
59.256252 -15.818188 59.396893 -15.771935 59.490654 -15.725683 c
59.959454 -15.633179 60.428253 -15.448168 60.756413 -15.216909 c
61.084572 -14.985649 61.412727 -14.708141 61.647125 -14.338125 c
61.881527 -14.014360 62.069046 -13.598091 62.256565 -13.135571 c
62.631607 -12.164280 l
62.959766 -11.377996 63.006649 -10.637964 62.866009 -9.944185 c
62.772247 -9.204153 62.303448 -8.510372 61.553368 -8.001600 c
h
58.224895 -12.626799 m
58.084255 -12.673050 57.896732 -12.719303 57.709213 -12.719303 c
57.427933 -12.765554 57.099770 -12.765556 56.724731 -12.765556 c
53.255619 -12.765556 l
53.161861 -12.765556 53.021217 -12.765556 52.927460 -12.765556 c
53.771297 -10.452957 l
58.740570 -10.452957 l
58.928093 -10.452957 59.068737 -10.452955 59.162495 -10.499207 c
59.162495 -10.545460 59.162495 -10.591713 59.162495 -10.684217 c
59.162495 -10.822973 59.115612 -11.007980 59.021851 -11.192989 c
58.693695 -12.025524 l
58.599934 -12.256784 58.506176 -12.395538 58.459293 -12.488043 c
58.412415 -12.534294 58.318653 -12.580547 58.224895 -12.626799 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 44.725677 cm
/Pattern cs
/P24 scn
62.912895 -19.564590 m
58.037373 -19.564590 l
55.130821 -15.633171 l
53.255623 -15.633171 l
52.927464 -15.633171 52.646187 -15.633171 52.458668 -15.679424 c
52.271145 -15.679424 52.177383 -15.725677 52.130501 -15.771931 c
52.083622 -15.818182 52.036747 -15.818180 51.989864 -15.910685 c
51.942986 -15.956936 51.896103 -16.095694 51.802345 -16.280701 c
50.583466 -19.564590 l
45.848587 -19.564590 l
50.770985 -6.290272 l
58.881214 -6.290272 l
60.100094 -6.290272 61.037689 -6.521530 61.787769 -7.030302 c
62.631607 -7.585327 63.147293 -8.325357 63.381695 -9.250399 c
63.522331 -9.990429 63.475452 -10.822966 63.100414 -11.655502 c
62.725372 -12.626793 l
62.537853 -13.135565 62.303455 -13.551834 62.069054 -13.875599 c
61.787773 -14.245615 61.459614 -14.615631 61.084572 -14.846891 c
60.756413 -15.078150 60.334496 -15.263157 59.865696 -15.355661 c
62.912895 -19.564590 l
h
58.365536 -18.870811 m
61.506496 -18.870811 l
58.553059 -14.893141 l
59.115616 -14.800638 l
59.256256 -14.800638 59.350018 -14.754385 59.490658 -14.754385 c
59.959457 -14.661880 60.334492 -14.523123 60.615772 -14.291864 c
60.943932 -14.106855 61.178329 -13.829344 61.412727 -13.505581 c
61.600250 -13.181816 61.787773 -12.811800 61.975296 -12.395533 c
62.350330 -11.424242 l
62.631611 -10.684210 62.725368 -10.036680 62.584728 -9.389153 c
62.444088 -8.649120 61.975292 -8.047848 61.318974 -7.585327 c
60.662655 -7.169060 59.865696 -6.984051 58.787457 -6.984051 c
51.146023 -6.984051 l
46.739311 -18.870811 l
49.974026 -18.870811 l
51.052269 -16.003191 l
51.146027 -15.771931 51.239784 -15.586920 51.333546 -15.448164 c
51.427303 -15.309408 51.567940 -15.216906 51.708580 -15.124401 c
51.849220 -15.031897 52.036743 -14.985645 52.271141 -14.939392 c
52.505543 -14.893141 52.833706 -14.893141 53.161865 -14.893141 c
55.412106 -14.893141 l
58.365536 -18.870811 l
h
52.458668 -12.441784 m
53.583782 -9.435406 l
58.787457 -9.435406 l
58.974976 -9.435406 59.162495 -9.435406 59.303131 -9.481659 c
59.584412 -9.527910 l
59.584412 -9.805420 l
59.584412 -9.851673 59.584412 -9.944178 59.584412 -10.036680 c
59.584412 -10.221689 59.490658 -10.406698 59.396896 -10.637959 c
59.068733 -11.424242 l
58.974972 -11.655500 58.881214 -11.840509 58.787457 -11.979265 c
58.693695 -12.118023 58.553055 -12.210526 58.412415 -12.256777 c
58.224895 -12.349281 58.037380 -12.349281 57.756100 -12.395533 c
57.474823 -12.441784 57.146656 -12.441784 56.724735 -12.441784 c
53.255623 -12.441784 l
53.161865 -12.441784 53.068104 -12.441784 52.927464 -12.441784 c
52.458668 -12.441784 l
h
53.443146 -11.748005 m
56.677860 -11.748005 l
57.052898 -11.748005 57.381054 -11.748003 57.662334 -11.701752 c
57.849854 -11.701752 57.990498 -11.655502 58.084259 -11.609249 c
58.131138 -11.609249 58.178017 -11.562998 58.224899 -11.516745 c
58.271778 -11.470493 58.318653 -11.377991 58.412415 -11.146730 c
58.740574 -10.314194 l
58.787457 -10.221689 58.787453 -10.129185 58.834332 -10.082933 c
54.099461 -10.082933 l
53.443146 -11.748005 l
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 45.419464 cm
/Pattern cs
/P25 scn
63.850487 -19.888363 m
67.835281 -19.888363 l
72.523277 -7.307821 l
68.491592 -7.307821 l
63.850487 -19.888363 l
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 44.725677 cm
/Pattern cs
/P26 scn
68.069679 -19.564590 m
63.334805 -19.564590 l
68.257202 -6.290272 l
72.992081 -6.290272 l
68.069679 -19.564590 l
h
64.319290 -18.870811 m
67.554001 -18.870811 l
71.960716 -6.984051 l
68.725998 -6.984051 l
64.319290 -18.870811 l
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 45.373199 cm
/Pattern cs
/P27 scn
87.196693 -7.955336 m
86.446617 -7.492815 85.462135 -7.307808 84.290138 -7.307808 c
79.742790 -7.307808 l
78.852066 -7.307808 78.101990 -7.354061 77.539429 -7.492817 c
76.883110 -7.631573 76.320549 -7.816580 75.851753 -8.140343 c
75.382950 -8.464108 74.961037 -8.880375 74.632874 -9.435400 c
74.304718 -9.944172 73.976555 -10.545448 73.695274 -11.285480 c
72.663910 -13.875591 l
72.195114 -15.078144 72.007599 -16.095684 72.241997 -17.020725 c
72.429512 -17.945765 72.992073 -18.732050 73.835915 -19.240822 c
74.585991 -19.703342 75.570465 -19.934601 76.789345 -19.934601 c
81.336700 -19.934601 l
82.227425 -19.934601 82.930626 -19.888348 83.540062 -19.749592 c
84.196381 -19.610836 84.758942 -19.425827 85.227737 -19.102064 c
85.696541 -18.778299 86.118462 -18.362036 86.446625 -17.807013 c
86.774780 -17.298241 87.102936 -16.696964 87.384216 -15.910681 c
88.415581 -13.320568 l
88.884377 -12.118015 89.025017 -11.100471 88.837494 -10.175432 c
88.603096 -9.204140 88.040535 -8.464108 87.196693 -7.955336 c
h
80.727264 -16.696962 m
76.883102 -16.696962 l
76.273666 -16.696962 75.992393 -16.604458 75.898636 -16.558207 c
75.898636 -16.511953 l
75.851753 -16.373198 75.851753 -15.956932 76.226791 -15.031891 c
77.305031 -12.395527 l
77.492554 -11.933008 77.680069 -11.609243 77.820709 -11.331732 c
77.961349 -11.100471 78.148865 -10.915462 78.336388 -10.776707 c
78.523903 -10.637951 78.758308 -10.545446 79.039589 -10.499195 c
79.367752 -10.452944 79.742790 -10.406693 80.211586 -10.406693 c
84.055740 -10.406693 l
84.665176 -10.406693 84.946457 -10.499197 85.040222 -10.545448 c
85.040222 -10.591700 l
85.087097 -10.730455 85.087105 -11.146723 84.712059 -12.071764 c
83.633827 -14.708126 l
83.446304 -15.170645 83.258781 -15.540663 83.071266 -15.818174 c
82.930626 -16.049435 82.743103 -16.234442 82.555588 -16.326946 c
82.368065 -16.465702 82.133659 -16.511953 81.852379 -16.558207 c
81.617981 -16.696962 81.196068 -16.696962 80.727264 -16.696962 c
h
f*
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 44.725677 cm
/Pattern cs
/P28 scn
81.242943 -19.564590 m
76.695587 -19.564590 l
75.429825 -19.564590 74.398468 -19.333332 73.601509 -18.824562 c
72.663910 -18.269537 72.054482 -17.436998 71.820076 -16.373203 c
71.585678 -15.401911 71.773201 -14.291866 72.288879 -13.043062 c
73.320236 -10.452950 l
73.648392 -9.666666 73.976555 -9.019136 74.304710 -8.556618 c
74.679749 -7.955341 75.101669 -7.492823 75.617348 -7.169058 c
76.133026 -6.845295 76.742470 -6.614033 77.445663 -6.475277 c
78.055107 -6.336521 78.852066 -6.290272 79.742790 -6.290272 c
84.290138 -6.290272 l
85.555893 -6.290272 86.587257 -6.521530 87.384216 -6.984051 c
88.321815 -7.539074 88.931259 -8.371611 89.165657 -9.435406 c
89.353180 -10.406698 89.212540 -11.516745 88.696861 -12.765549 c
87.665497 -15.355661 l
87.337334 -16.141945 87.009178 -16.789471 86.681015 -17.298243 c
86.305977 -17.853266 85.884056 -18.315786 85.368378 -18.685802 c
84.852699 -19.055817 84.243263 -19.287083 83.540062 -19.425838 c
82.930626 -19.518341 82.133659 -19.564590 81.242943 -19.564590 c
h
79.695900 -6.984051 m
78.852066 -6.984051 78.101990 -7.030302 77.539429 -7.169058 c
76.929985 -7.261562 76.414307 -7.492823 75.992386 -7.770334 c
75.570465 -8.047846 75.195435 -8.464113 74.867271 -8.926634 c
74.585991 -9.389153 74.257828 -10.036682 73.929672 -10.730463 c
72.898308 -13.320572 l
72.429512 -14.430620 72.288872 -15.401913 72.476395 -16.234449 c
72.663910 -17.066984 73.179596 -17.760763 73.929672 -18.223284 c
74.632874 -18.639551 75.523590 -18.870811 76.695587 -18.870811 c
81.242943 -18.870811 l
82.086784 -18.870811 82.789978 -18.824558 83.399422 -18.685802 c
84.008858 -18.593298 84.524536 -18.362041 84.946457 -18.084530 c
85.368378 -17.807018 85.743423 -17.390749 86.071579 -16.928230 c
86.352859 -16.465710 86.681015 -15.864433 87.009178 -15.078150 c
88.040535 -12.534290 l
88.509338 -11.377991 88.649979 -10.452950 88.462463 -9.574162 c
88.274940 -8.741627 87.759254 -8.047848 87.009178 -7.585327 c
86.305977 -7.169060 85.415260 -6.984051 84.243263 -6.984051 c
79.695900 -6.984051 l
h
80.727264 -16.419458 m
76.883102 -16.419458 l
76.226784 -16.419458 75.898628 -16.326952 75.711105 -16.234449 c
75.570473 -16.188198 l
75.523590 -16.049440 l
75.523590 -16.049440 75.523590 -16.003191 75.476707 -15.956938 c
75.429832 -15.725677 75.429832 -15.216904 75.851753 -14.291864 c
76.929993 -11.655502 l
77.117508 -11.192982 77.305023 -10.776714 77.492546 -10.499203 c
77.680061 -10.221689 77.914474 -9.990429 78.148872 -9.851673 c
78.383270 -9.712917 78.664543 -9.620415 78.992706 -9.527910 c
79.320869 -9.481659 79.742783 -9.435406 80.211578 -9.435406 c
84.055740 -9.435406 l
84.712059 -9.435406 85.087097 -9.527908 85.227737 -9.620413 c
85.368378 -9.666666 l
85.462135 -9.897926 l
85.509018 -10.175438 85.509018 -10.637959 85.133980 -11.609249 c
84.055740 -14.245611 l
83.868217 -14.754383 83.680702 -15.124399 83.493179 -15.401911 c
83.305656 -15.679424 83.118141 -15.864433 82.883743 -16.049440 c
82.649345 -16.188196 82.368065 -16.280701 82.086784 -16.326952 c
81.617989 -16.373205 81.242943 -16.419458 80.727264 -16.419458 c
h
76.226791 -15.633171 m
76.367432 -15.679424 76.601830 -15.679424 76.929993 -15.679424 c
80.774139 -15.679424 l
81.242943 -15.679424 81.617981 -15.633173 81.899261 -15.586922 c
82.133667 -15.540670 82.321182 -15.494415 82.461823 -15.401911 c
82.602463 -15.309408 82.743103 -15.170650 82.883743 -14.985643 c
83.071259 -14.754383 83.211899 -14.384369 83.399422 -13.968102 c
84.477669 -11.331738 l
84.758942 -10.684210 84.805824 -10.360445 84.805824 -10.175438 c
84.665184 -10.129185 84.477661 -10.129185 84.102623 -10.129185 c
80.258461 -10.129185 l
79.836548 -10.129185 79.461510 -10.175438 79.180229 -10.221689 c
78.945824 -10.267941 78.758316 -10.314194 78.617676 -10.452950 c
78.477036 -10.545454 78.336388 -10.684208 78.195747 -10.869217 c
78.008232 -11.100477 77.867592 -11.470493 77.680069 -11.886763 c
76.601830 -14.523125 l
76.273674 -15.124399 76.226791 -15.494415 76.226791 -15.633171 c
h
f*
n
Q

endstream
endobj

59 0 obj
  44697
endobj

60 0 obj
  << /Annots []
     /Type /Page
     /MediaBox [ 0.000000 0.000000 91.000000 58.000000 ]
     /Resources 57 0 R
     /Contents 58 0 R
     /Parent 61 0 R
  >>
endobj

61 0 obj
  << /Kids [ 60 0 R ]
     /Count 1
     /Type /Pages
  >>
endobj

62 0 obj
  << /Pages 61 0 R
     /Type /Catalog
  >>
endobj

xref
0 63
0000000000 65535 f
0000000010 00000 n
0000003849 00000 n
0000003872 00000 n
0000006726 00000 n
0000006749 00000 n
0000009813 00000 n
0000009836 00000 n
0000012690 00000 n
0000012713 00000 n
0000015778 00000 n
0000015802 00000 n
0000018868 00000 n
0000018892 00000 n
0000021748 00000 n
0000021772 00000 n
0000024838 00000 n
0000024862 00000 n
0000027718 00000 n
0000027742 00000 n
0000030808 00000 n
0000030832 00000 n
0000033507 00000 n
0000033531 00000 n
0000036597 00000 n
0000036621 00000 n
0000039687 00000 n
0000039711 00000 n
0000042777 00000 n
0000042801 00000 n
0000045476 00000 n
0000045500 00000 n
0000048175 00000 n
0000048199 00000 n
0000050874 00000 n
0000050898 00000 n
0000053964 00000 n
0000053988 00000 n
0000056663 00000 n
0000056687 00000 n
0000059753 00000 n
0000059777 00000 n
0000062843 00000 n
0000062867 00000 n
0000065542 00000 n
0000065566 00000 n
0000068241 00000 n
0000068265 00000 n
0000071331 00000 n
0000071355 00000 n
0000074421 00000 n
0000074445 00000 n
0000077120 00000 n
0000077144 00000 n
0000079819 00000 n
0000079843 00000 n
0000082518 00000 n
0000082542 00000 n
0000099720 00000 n
0000144475 00000 n
0000144500 00000 n
0000144677 00000 n
0000144753 00000 n
trailer
<< /ID [ (some) (id) ]
   /Root 62 0 R
   /Size 63
>>
startxref
144814
%%EOF